From 502034ef4b54b0d1c18202f39a23d12912136bd6 Mon Sep 17 00:00:00 2001
From: zihan19-song <zihan19.song@samsung.com>
Date: Fri, 24 Jan 2025 23:56:16 +0800
Subject: [PATCH] add makefile to switch example

---
 apps/bl602/switch_example/CMakeLists.txt      |    8 -
 apps/bl602/switch_example/Makefile            |   79 +-
 apps/bl602/switch_example/debug_sdkconfig     |   19 -
 apps/bl602/switch_example/main/CMakeLists.txt |   13 -
 .../switch_example/main/Kconfig.projbuild     |   93 -
 apps/bl602/switch_example/main/caps_switch.c  |  158 --
 apps/bl602/switch_example/main/caps_switch.h  |   47 -
 apps/bl602/switch_example/main/component.mk   |    6 -
 .../switch_example/main/device_control.c      |  158 --
 .../switch_example/main/device_control.h      |   63 -
 .../switch_example/main/device_info.json      |    8 -
 .../switch_example/main/idf_component.yml     |   17 -
 apps/bl602/switch_example/main/iot_cli_cmd.c  |  100 -
 apps/bl602/switch_example/main/iot_cli_cmd.h  |   19 -
 apps/bl602/switch_example/main/iot_uart_cli.c |  320 ---
 apps/bl602/switch_example/main/iot_uart_cli.h |   42 -
 apps/bl602/switch_example/main/main.c         |  272 ---
 .../main/onboarding_config.json               |   21 -
 apps/bl602/switch_example/partitions.2MB.csv  |    8 -
 apps/bl602/switch_example/sdkconfig           | 1797 -----------------
 20 files changed, 77 insertions(+), 3171 deletions(-)
 delete mode 100644 apps/bl602/switch_example/CMakeLists.txt
 delete mode 100644 apps/bl602/switch_example/debug_sdkconfig
 delete mode 100644 apps/bl602/switch_example/main/CMakeLists.txt
 delete mode 100644 apps/bl602/switch_example/main/Kconfig.projbuild
 delete mode 100644 apps/bl602/switch_example/main/caps_switch.c
 delete mode 100644 apps/bl602/switch_example/main/caps_switch.h
 delete mode 100644 apps/bl602/switch_example/main/component.mk
 delete mode 100644 apps/bl602/switch_example/main/device_control.c
 delete mode 100644 apps/bl602/switch_example/main/device_control.h
 delete mode 100644 apps/bl602/switch_example/main/device_info.json
 delete mode 100644 apps/bl602/switch_example/main/idf_component.yml
 delete mode 100644 apps/bl602/switch_example/main/iot_cli_cmd.c
 delete mode 100644 apps/bl602/switch_example/main/iot_cli_cmd.h
 delete mode 100644 apps/bl602/switch_example/main/iot_uart_cli.c
 delete mode 100644 apps/bl602/switch_example/main/iot_uart_cli.h
 delete mode 100644 apps/bl602/switch_example/main/main.c
 delete mode 100644 apps/bl602/switch_example/main/onboarding_config.json
 delete mode 100644 apps/bl602/switch_example/partitions.2MB.csv
 delete mode 100644 apps/bl602/switch_example/sdkconfig

diff --git a/apps/bl602/switch_example/CMakeLists.txt b/apps/bl602/switch_example/CMakeLists.txt
deleted file mode 100644
index c7e0ff8..0000000
--- a/apps/bl602/switch_example/CMakeLists.txt
+++ /dev/null
@@ -1,8 +0,0 @@
-# The following lines of boilerplate have to be in your project's
-# CMakeLists in this exact order for cmake to work correctly
-cmake_minimum_required(VERSION 3.5)
-
-include($ENV{IDF_PATH}/tools/cmake/project.cmake)
-
-project(switch_example)
-
diff --git a/apps/bl602/switch_example/Makefile b/apps/bl602/switch_example/Makefile
index 802cf42..96bb22b 100644
--- a/apps/bl602/switch_example/Makefile
+++ b/apps/bl602/switch_example/Makefile
@@ -4,8 +4,83 @@
 #
 
 PROJECT_NAME := switch_example
+PROJECT_PATH := $(abspath .)
+IOT_CORE_PATH := $(abspath ${PROJECT_PATH}/../../../iot-core)
+PROJECT_BOARD := evb
+export PROJECT_PATH PROJECT_BOARD IOT_CORE_PATH
+#CONFIG_TOOLPREFIX :=
 
-EXTRA_COMPONENT_DIRS := ${IDF_PATH}/../../iot-core
+BLECONTROLLER_LIBS := std m0s1 m0s1s
+BLECONTROLLER_LIB_DEFAULT := std
+BLECONTROLLER_LIB_PREFIX := blecontroller_602_
 
-include $(IDF_PATH)/make/project.mk
+CPPFLAGS += -I$(PROJECT_PATH)
 
+-include ./proj_config.mk
+# include $(IOT_CORE_PATH)/src/component.mk
+# $(info !!!!!![include dir] $(COMPONENT_ADD_INCLUDEDIRS))
+IOT_CORE_COMPONENTS := src
+IOT_CORE_COMPONENTS_REAL_PATH = $(abspath ${IOT_CORE_PATH}/src/)
+
+ifeq ($(origin BL60X_SDK_PATH), undefined)
+BL60X_SDK_PATH_GUESS ?= $(shell pwd)
+BL60X_SDK_PATH ?= $(BL60X_SDK_PATH_GUESS)/../../../bsp/bl602
+$(info ****** Please SET BL60X_SDK_PATH ******)
+$(info ****** Trying SDK PATH [$(BL60X_SDK_PATH)])
+endif
+
+COMPONENTS_NETWORK := sntp dns_server
+COMPONENTS_BLSYS   := bltime blfdt blmtd blota bloop loopadc looprt loopset
+COMPONENTS_VFS     := romfs cjson
+
+ifeq ($(CONFIG_BLECONTROLLER_LIB),all)
+COMPONENTS_BLECONTROLLER := $(addprefix $(BLECONTROLLER_LIB_PREFIX), $(BLECONTROLLER_LIBS))
+else
+ifeq ($(findstring $(CONFIG_BLECONTROLLER_LIB), $(BLECONTROLLER_LIBS)),)
+COMPONENTS_BLECONTROLLER := $(addprefix $(BLECONTROLLER_LIB_PREFIX), $(BLECONTROLLER_LIB_DEFAULT))
+else
+COMPONENTS_BLECONTROLLER := $(addprefix $(BLECONTROLLER_LIB_PREFIX), $(CONFIG_BLECONTROLLER_LIB))
+endif
+endif
+
+ifeq ($(CONFIG_BT_TL),1)
+COMPONENTS_BLE     := $(COMPONENTS_BLECONTROLLER)
+else
+COMPONENTS_BLE     := $(COMPONENTS_BLECONTROLLER) blestack
+endif
+
+#INCLUDE_COMPONENTS += $(EXTRA_COMPONENT_DIRS)
+INCLUDE_COMPONENTS += src freertos_riscv_ram newlibc bl602 bl602_std newlibc wifi blcrypto_suite wifi_manager wpa_supplicant bl_os_adapter wifi_hosal hosal lwip lwip_dhcpd mbedtls_lts vfs yloop utils cli aws-iot httpc netutils blog blog_testc wifi_bt_coex
+INCLUDE_COMPONENTS += easyflash4 lwip_altcp_tls_mbedtls coredump rfparam_adapter_tmp
+INCLUDE_COMPONENTS += $(COMPONENTS_NETWORK)
+INCLUDE_COMPONENTS += $(COMPONENTS_BLSYS)
+INCLUDE_COMPONENTS += $(COMPONENTS_VFS)
+INCLUDE_COMPONENTS += $(PROJECT_NAME)
+
+ifeq ($(CONFIG_COMPONENT_BUGKILLER_ENABLE),1)
+INCLUDE_COMPONENTS += bugkiller_freertos
+endif
+
+ifeq ($(CONFIG_BT),1)
+INCLUDE_COMPONENTS += $(COMPONENTS_BLE)
+ifeq ($(CONFIG_BT_MESH),1)
+INCLUDE_COMPONENTS += blemesh
+ifeq ($(CONFIG_BT_MESH_MODEL),1)
+INCLUDE_COMPONENTS += blemesh_model
+endif
+endif
+
+ifeq ($(CONFIG_BT_MESH_SYNC),1)
+INCLUDE_COMPONENTS += blsync_ble
+endif
+ifeq ($(CONFIG_AUTO_PTS),1)
+INCLUDE_COMPONENTS += bleptstest
+endif
+endif
+include $(BL60X_SDK_PATH)/make_scripts_riscv/project.mk
+
+
+
+ifeq ($(CONFIG_BLECONTROLLER_LIB),all)
+LDFLAGS := $(filter-out $(addprefix -l$(BLECONTROLLER_LIB_PREFIX), $(filter-out $(BLECONTROLLER_LIB_DEFAULT), $(BLECONTROLLER_LIBS))), $(LDFLAGS))
+endif
diff --git a/apps/bl602/switch_example/debug_sdkconfig b/apps/bl602/switch_example/debug_sdkconfig
deleted file mode 100644
index de4c60c..0000000
--- a/apps/bl602/switch_example/debug_sdkconfig
+++ /dev/null
@@ -1,19 +0,0 @@
-#
-# Log output
-#
-CONFIG_LOG_DEFAULT_LEVEL_NONE=
-CONFIG_LOG_DEFAULT_LEVEL_ERROR=
-CONFIG_LOG_DEFAULT_LEVEL_WARN=
-CONFIG_LOG_DEFAULT_LEVEL_INFO=y
-CONFIG_LOG_DEFAULT_LEVEL_DEBUG=
-CONFIG_LOG_DEFAULT_LEVEL_VERBOSE=
-CONFIG_LOG_DEFAULT_LEVEL=3
-CONFIG_LOG_COLORS=y
-CONFIG_LOG_SET_LEVEL=
-
-CONFIG_STDK_DEBUG_MEMORY_CHECK=y
-
-CONFIG_STDK_IOT_CORE_LOG_LEVEL_ERROR=y
-CONFIG_STDK_IOT_CORE_LOG_LEVEL_WARN=y
-CONFIG_STDK_IOT_CORE_LOG_LEVEL_INFO=y
-CONFIG_STDK_IOT_CORE_LOG_LEVEL_DEBUG=
diff --git a/apps/bl602/switch_example/main/CMakeLists.txt b/apps/bl602/switch_example/main/CMakeLists.txt
deleted file mode 100644
index 7b27f13..0000000
--- a/apps/bl602/switch_example/main/CMakeLists.txt
+++ /dev/null
@@ -1,13 +0,0 @@
-idf_component_register(SRCS "main.c"
-                            "device_control.c"
-                            "iot_cli_cmd.c"
-                            "iot_uart_cli.c"
-                            "caps_switch.c"
-                    EMBED_FILES "device_info.json"
-                                "onboarding_config.json"
-                    )
-
-set(STDK_IOT_CORE_USE_DEFINED_CONFIG "y")
-
-add_subdirectory($ENV{STDK_CORE_PATH} iotcore)
-target_link_libraries(${COMPONENT_LIB} PUBLIC iotcore)
diff --git a/apps/bl602/switch_example/main/Kconfig.projbuild b/apps/bl602/switch_example/main/Kconfig.projbuild
deleted file mode 100644
index f6a6574..0000000
--- a/apps/bl602/switch_example/main/Kconfig.projbuild
+++ /dev/null
@@ -1,93 +0,0 @@
-menu "Example Configuration"
-
-config WIFI_SSID
-    string "WiFi SSID"
-    default "myssid"
-    help
-        SSID (network name) for the example to connect to.
-
-config WIFI_PASSWORD
-    string "WiFi Password"
-    default "mypassword"
-    help
-        WiFi password (WPA or WPA2) for the example to use.
-        Can be left blank if the network has no security set.
-
-config MQTT_BROKER
-    string "MQTT broker"
-    default "mosquitto.org"
-    help
-        MQTT broker which you want to login, either IP address or domain name is OK.
-
-config MQTT_PORT
-    int "Default MQTT port"
-    default 1883
-    help
-        MQTT port.
-
-config MQTT_SUB_TOPIC
-    string "MQTT subscribe topic"
-    default "/espressif/sub"
-    help
-        MQTT subscribe topic to MQTT broker.
-
-choice MQTT_SUB_QOS
-    prompt "MQTT Subscribe QoS"
-    default SUB_QOS1
-    help
-        MQTT subcribe QoS level.
-
-config SUB_QOS0
-    bool "QOS0"
-config SUB_QOS1
-    bool "QOS1"
-config SUB_QOS2
-    bool "QOS2"
-endchoice
-
-config DEFAULT_MQTT_SUB_QOS
-    int
-    default 0 if SUB_QOS0
-    default 1 if SUB_QOS1
-    default 2 if SUB_QOS2
-
-config MQTT_PUB_TOPIC
-    string "MQTT publish topic"
-    default "/espressif/pub"
-    help
-        MQTT publish topic to MQTT broker.
-
-choice MQTT_PUB_QOS
-    prompt "MQTT publish QoS"
-    default PUB_QOS1
-    help
-        MQTT publish QoS level.
-
-config PUB_QOS0
-    bool "QOS0"
-config PUB_QOS1
-    bool "QOS1"
-config PUB_QOS2
-    bool "QOS2"
-endchoice
-
-config DEFAULT_MQTT_PUB_QOS
-    int
-    default 0 if PUB_QOS0
-    default 1 if PUB_QOS1
-    default 2 if PUB_QOS2
-
-config MQTT_PUBLISH_INTERVAL
-    int "MQTT publish interval(ms)"
-    default 0
-    help
-        Default MQTT publish message interval.
-
-config MQTT_PAYLOAD_BUFFER
-    int "MQTT payload size(Bytes)"
-    default 1460
-    help
-        1460~2048 is recommended.
-        MQTT payload size.
-
-endmenu
diff --git a/apps/bl602/switch_example/main/caps_switch.c b/apps/bl602/switch_example/main/caps_switch.c
deleted file mode 100644
index 213c715..0000000
--- a/apps/bl602/switch_example/main/caps_switch.c
+++ /dev/null
@@ -1,158 +0,0 @@
-/* ***************************************************************************
- *
- * Copyright 2019-2020 Samsung Electronics All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
- * either express or implied. See the License for the specific
- * language governing permissions and limitations under the License.
- *
- ****************************************************************************/
-
-#include <string.h>
-#include <stdio.h>
-#include <stdlib.h>
-
-#include "st_dev.h"
-#include "caps_switch.h"
-
-static int caps_switch_attr_switch_str2idx(const char *value)
-{
-    int index;
-
-    for (index = 0; index < CAP_ENUM_SWITCH_SWITCH_VALUE_MAX; index++) {
-        if (!strcmp(value, caps_helper_switch.attr_switch.values[index])) {
-            return index;
-        }
-    }
-    return -1;
-}
-
-static const char *caps_switch_get_switch_value(caps_switch_data_t *caps_data)
-{
-    if (!caps_data) {
-        printf("caps_data is NULL\n");
-        return NULL;
-    }
-    return caps_data->switch_value;
-}
-
-static void caps_switch_set_switch_value(caps_switch_data_t *caps_data, const char *value)
-{
-    if (!caps_data) {
-        printf("caps_data is NULL\n");
-        return;
-    }
-    if (caps_data->switch_value) {
-        free(caps_data->switch_value);
-    }
-    caps_data->switch_value = strdup(value);
-}
-
-static void caps_switch_attr_switch_send(caps_switch_data_t *caps_data)
-{
-    int sequence_no = -1;
-
-    if (!caps_data || !caps_data->handle) {
-        printf("fail to get handle\n");
-        return;
-    }
-    if (!caps_data->switch_value) {
-        printf("value is NULL\n");
-        return;
-    }
-
-    ST_CAP_SEND_ATTR_STRING(caps_data->handle,
-            (char *)caps_helper_switch.attr_switch.name,
-            caps_data->switch_value,
-            NULL,
-            NULL,
-            sequence_no);
-
-    if (sequence_no < 0)
-        printf("fail to send switch value\n");
-    else
-        printf("Sequence number return : %d\n", sequence_no);
-
-}
-
-
-static void caps_switch_cmd_on_cb(IOT_CAP_HANDLE *handle, iot_cap_cmd_data_t *cmd_data, void *usr_data)
-{
-    caps_switch_data_t *caps_data = (caps_switch_data_t *)usr_data;
-    const char* value = caps_helper_switch.attr_switch.values[CAP_ENUM_SWITCH_SWITCH_VALUE_ON];
-
-    printf("called [%s] func with num_args:%u\n", __func__, cmd_data->num_args);
-
-    caps_switch_set_switch_value(caps_data, value);
-    if (caps_data && caps_data->cmd_on_usr_cb)
-        caps_data->cmd_on_usr_cb(caps_data);
-    caps_switch_attr_switch_send(caps_data);
-}
-
-static void caps_switch_cmd_off_cb(IOT_CAP_HANDLE *handle, iot_cap_cmd_data_t *cmd_data, void *usr_data)
-{
-    caps_switch_data_t *caps_data = (caps_switch_data_t *)usr_data;
-    const char* value = caps_helper_switch.attr_switch.values[CAP_ENUM_SWITCH_SWITCH_VALUE_OFF];
-
-    printf("called [%s] func with num_args:%u\n", __func__, cmd_data->num_args);
-
-    caps_switch_set_switch_value(caps_data, value);
-    if (caps_data && caps_data->cmd_off_usr_cb)
-        caps_data->cmd_off_usr_cb(caps_data);
-    caps_switch_attr_switch_send(caps_data);
-}
-
-static void caps_switch_init_cb(IOT_CAP_HANDLE *handle, void *usr_data)
-{
-    caps_switch_data_t *caps_data = usr_data;
-    if (caps_data && caps_data->init_usr_cb)
-        caps_data->init_usr_cb(caps_data);
-    caps_switch_attr_switch_send(caps_data);
-}
-
-caps_switch_data_t *caps_switch_initialize(IOT_CTX *ctx, const char *component, void *init_usr_cb, void *usr_data)
-{
-    caps_switch_data_t *caps_data = NULL;
-    int err;
-
-    caps_data = malloc(sizeof(caps_switch_data_t));
-    if (!caps_data) {
-        printf("fail to malloc for caps_switch_data\n");
-        return NULL;
-    }
-
-    memset(caps_data, 0, sizeof(caps_switch_data_t));
-
-    caps_data->init_usr_cb = init_usr_cb;
-    caps_data->usr_data = usr_data;
-
-    caps_data->get_switch_value = caps_switch_get_switch_value;
-    caps_data->set_switch_value = caps_switch_set_switch_value;
-    caps_data->attr_switch_str2idx = caps_switch_attr_switch_str2idx;
-    caps_data->attr_switch_send = caps_switch_attr_switch_send;
-    if (ctx) {
-        caps_data->handle = st_cap_handle_init(ctx, component, caps_helper_switch.id, caps_switch_init_cb, caps_data);
-    }
-    if (caps_data->handle) {
-        err = st_cap_cmd_set_cb(caps_data->handle, caps_helper_switch.cmd_on.name, caps_switch_cmd_on_cb, caps_data);
-        if (err) {
-            printf("fail to set cmd_cb for on of switch\n");
-    }
-        err = st_cap_cmd_set_cb(caps_data->handle, caps_helper_switch.cmd_off.name, caps_switch_cmd_off_cb, caps_data);
-        if (err) {
-            printf("fail to set cmd_cb for off of switch\n");
-    }
-    } else {
-        printf("fail to init switch handle\n");
-    }
-
-    return caps_data;
-}
diff --git a/apps/bl602/switch_example/main/caps_switch.h b/apps/bl602/switch_example/main/caps_switch.h
deleted file mode 100644
index 118a3a8..0000000
--- a/apps/bl602/switch_example/main/caps_switch.h
+++ /dev/null
@@ -1,47 +0,0 @@
-/* ***************************************************************************
- *
- * Copyright 2019-2020 Samsung Electronics All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
- * either express or implied. See the License for the specific
- * language governing permissions and limitations under the License.
- *
- ****************************************************************************/
-
-#include "caps/iot_caps_helper_switch.h"
-
-#ifdef __cplusplus
-extern "C" {
-#endif
-
-typedef struct caps_switch_data {
-    IOT_CAP_HANDLE* handle;
-    void *usr_data;
-    void *cmd_data;
-
-    char *switch_value;
-
-    const char *(*get_switch_value)(struct caps_switch_data *caps_data);
-    void (*set_switch_value)(struct caps_switch_data *caps_data, const char *value);
-    int (*attr_switch_str2idx)(const char *value);
-    void (*attr_switch_send)(struct caps_switch_data *caps_data);
-
-    void (*init_usr_cb)(struct caps_switch_data *caps_data);
-
-    void (*cmd_on_usr_cb)(struct caps_switch_data *caps_data);
-    void (*cmd_off_usr_cb)(struct caps_switch_data *caps_data);
-} caps_switch_data_t;
-
-caps_switch_data_t *caps_switch_initialize(IOT_CTX *ctx, const char *component, void *init_usr_cb, void *usr_data);
-#ifdef __cplusplus
-}
-#endif
-
diff --git a/apps/bl602/switch_example/main/component.mk b/apps/bl602/switch_example/main/component.mk
deleted file mode 100644
index 425858f..0000000
--- a/apps/bl602/switch_example/main/component.mk
+++ /dev/null
@@ -1,6 +0,0 @@
-#
-# "main" pseudo-component makefile.
-#
-# (Uses default behaviour of compiling all source files in directory, adding 'include' to include path.)
-
-COMPONENT_EMBED_TXTFILES := onboarding_config.json device_info.json
\ No newline at end of file
diff --git a/apps/bl602/switch_example/main/device_control.c b/apps/bl602/switch_example/main/device_control.c
deleted file mode 100644
index fd8ea9c..0000000
--- a/apps/bl602/switch_example/main/device_control.c
+++ /dev/null
@@ -1,158 +0,0 @@
-/* ***************************************************************************
- *
- * Copyright 2019 Samsung Electronics All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
- * either express or implied. See the License for the specific
- * language governing permissions and limitations under the License.
- *
- ****************************************************************************/
-
-
-#include "device_control.h"
-
-#include "freertos/FreeRTOS.h"
-#include "freertos/queue.h"
-#include "freertos/task.h"
-#include <hosal_gpio.h>
-#include <hosal_dma.h>
-
-
-static hosal_gpio_dev_t led_gp;
-static hosal_gpio_dev_t button_gp;
-
-void change_switch_state(int switch_state)
-{
-    if (switch_state == SWITCH_OFF) {
-        hosal_gpio_output_set(&led_gp, MAINLED_GPIO_OFF);
-    } else {
-        hosal_gpio_output_set(&led_gp, MAINLED_GPIO_ON);
-    }
-}
-
-int get_button_event(int* button_event_type, int* button_event_count)
-{
-    static uint32_t button_count = 0;
-    static uint8_t button_last_state = BUTTON_GPIO_RELEASED;
-    static TimeOut_t button_timeout;
-    static TickType_t long_press_tick = pdMS_TO_TICKS(BUTTON_LONG_THRESHOLD_MS);
-    static TickType_t button_delay_tick = pdMS_TO_TICKS(BUTTON_DELAY_MS);
-
-    uint8_t gpio_level = 0;
-
-    if (hosal_gpio_input_get(&button_gp, &gpio_level) != 0) {
-        printf("wrong parameter!");
-        return false;
-    }
-    if (button_last_state != gpio_level) {
-        /* wait debounce time to ignore small ripple of currunt */
-        vTaskDelay( pdMS_TO_TICKS(BUTTON_DEBOUNCE_TIME_MS) );
-        if (hosal_gpio_input_get(&button_gp, &gpio_level) != 0) {
-            printf("wrong parameter!");
-            return false;
-        }
-        if (button_last_state != gpio_level) {
-            printf("Button event, val: %ld, tick: %lu\n", gpio_level, (uint32_t)xTaskGetTickCount());
-            button_last_state = gpio_level;
-            if (gpio_level == BUTTON_GPIO_PRESSED) {
-                button_count++;
-            }
-            vTaskSetTimeOutState(&button_timeout);
-            button_delay_tick = pdMS_TO_TICKS(BUTTON_DELAY_MS);
-            long_press_tick = pdMS_TO_TICKS(BUTTON_LONG_THRESHOLD_MS);
-        }
-    } else if (button_count > 0) {
-        if ((gpio_level == BUTTON_GPIO_PRESSED)
-                && (xTaskCheckForTimeOut(&button_timeout, &long_press_tick ) != pdFALSE)) {
-            *button_event_type = BUTTON_LONG_PRESS;
-            *button_event_count = 1;
-            button_count = 0;
-            return true;
-        } else if ((gpio_level == BUTTON_GPIO_RELEASED)
-                && (xTaskCheckForTimeOut(&button_timeout, &button_delay_tick ) != pdFALSE)) {
-            *button_event_type = BUTTON_SHORT_PRESS;
-            *button_event_count = button_count;
-            button_count = 0;
-            return true;
-        }
-    }
-
-    return false;
-}
-
-void led_blink(int switch_state, int delay, int count)
-{
-    for (int i = 0; i < count; i++) {
-        vTaskDelay(delay / portTICK_PERIOD_MS);
-        change_switch_state(1 - switch_state);
-        vTaskDelay(delay / portTICK_PERIOD_MS);
-        change_switch_state(switch_state);
-    }
-}
-
-void change_led_mode(int noti_led_mode)
-{
-    static TimeOut_t led_timeout;
-    static TickType_t led_tick = -1;
-    static int last_led_mode = -1;
-    static int led_state = SWITCH_OFF;
-
-    if (last_led_mode != noti_led_mode) {
-        last_led_mode = noti_led_mode;
-        vTaskSetTimeOutState(&led_timeout);
-        led_tick = 0;
-    }
-
-    switch (noti_led_mode)
-    {
-        case LED_ANIMATION_MODE_IDLE:
-            break;
-        case LED_ANIMATION_MODE_SLOW:
-            if (xTaskCheckForTimeOut(&led_timeout, &led_tick ) != pdFALSE) {
-                led_state = 1 - led_state;
-                change_switch_state(led_state);
-                vTaskSetTimeOutState(&led_timeout);
-                if (led_state == SWITCH_ON) {
-                    led_tick = pdMS_TO_TICKS(200);
-                } else {
-                    led_tick = pdMS_TO_TICKS(800);
-                }
-            }
-            break;
-        case LED_ANIMATION_MODE_FAST:
-            if (xTaskCheckForTimeOut(&led_timeout, &led_tick ) != pdFALSE) {
-                led_state = 1 - led_state;
-                change_switch_state(led_state);
-                vTaskSetTimeOutState(&led_timeout);
-                led_tick = pdMS_TO_TICKS(100);
-            }
-            break;
-        default:
-            break;
-    }
-}
-
-void iot_gpio_init(void)
-{
-	led_gp.port = GPIO_OUTPUT_MAINLED;
-    led_gp.config = OUTPUT_OPEN_DRAIN_NO_PULL;
-    hosal_gpio_init(&led_gp);
-
-    button_gp.port = GPIO_INPUT_BUTTON;
-    button_gp.config = INPUT_PULL_UP;
-    hosal_gpio_init(&button_gp);
-
-
-
-	gpio_set_level(GPIO_OUTPUT_MAINLED, MAINLED_GPIO_ON);
-}
-
-
diff --git a/apps/bl602/switch_example/main/device_control.h b/apps/bl602/switch_example/main/device_control.h
deleted file mode 100644
index 159b238..0000000
--- a/apps/bl602/switch_example/main/device_control.h
+++ /dev/null
@@ -1,63 +0,0 @@
-/* ***************************************************************************
- *
- * Copyright 2019 Samsung Electronics All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
- * either express or implied. See the License for the specific
- * language governing permissions and limitations under the License.
- *
- ****************************************************************************/
-
-
-
-#define GPIO_INPUT_BUTTON 1
-
-#define GPIO_OUTPUT_MAINLED 0
-
-
-#endif
-
-enum switch_onoff_state {
-    SWITCH_OFF = 0,
-    SWITCH_ON = 1,
-};
-
-enum main_led_gpio_state {
-    MAINLED_GPIO_ON = 1,
-    MAINLED_GPIO_OFF = 0,
-};
-
-enum led_animation_mode_list {
-    LED_ANIMATION_MODE_IDLE = 0,
-    LED_ANIMATION_MODE_FAST,
-    LED_ANIMATION_MODE_SLOW,
-};
-
-enum button_gpio_state {
-    BUTTON_GPIO_RELEASED = 1,
-    BUTTON_GPIO_PRESSED = 0,
-};
-
-#define BUTTON_DEBOUNCE_TIME_MS 20
-#define BUTTON_LONG_THRESHOLD_MS 5000
-#define BUTTON_DELAY_MS 300
-
-enum button_event_type {
-    BUTTON_LONG_PRESS = 0,
-    BUTTON_SHORT_PRESS = 1,
-};
-
-void change_switch_state(int switch_state);
-void button_isr_handler(void *arg);
-int get_button_event(int* button_event_type, int* button_event_count);
-void led_blink(int switch_state, int delay, int count);
-void change_led_mode(int noti_led_mode);
-void iot_gpio_init(void);
diff --git a/apps/bl602/switch_example/main/device_info.json b/apps/bl602/switch_example/main/device_info.json
deleted file mode 100644
index 5d9b000..0000000
--- a/apps/bl602/switch_example/main/device_info.json
+++ /dev/null
@@ -1,8 +0,0 @@
-{
-	"deviceInfo": {
-		"firmwareVersion": "firmwareVersion_here",
-		"privateKey": "privateKey_here",
-		"publicKey": "publicKey_here",
-		"serialNumber": "serialNumber_here"
-	}
-}
diff --git a/apps/bl602/switch_example/main/idf_component.yml b/apps/bl602/switch_example/main/idf_component.yml
deleted file mode 100644
index 2de2622..0000000
--- a/apps/bl602/switch_example/main/idf_component.yml
+++ /dev/null
@@ -1,17 +0,0 @@
-## IDF Component Manager Manifest File
-dependencies:
-  espressif/libsodium: "^1.0.20"
-  ## Required IDF version
-  idf:
-    version: ">=4.1.0"
-  # # Put list of dependencies here
-  # # For components maintained by Espressif:
-  # component: "~1.0.0"
-  # # For 3rd party components:
-  # username/component: ">=1.0.0,<2.0.0"
-  # username2/component2:
-  #   version: "~1.0.0"
-  #   # For transient dependencies `public` flag can be set.
-  #   # `public` flag doesn't have an effect dependencies of the `main` component.
-  #   # All dependencies of `main` are public by default.
-  #   public: true
diff --git a/apps/bl602/switch_example/main/iot_cli_cmd.c b/apps/bl602/switch_example/main/iot_cli_cmd.c
deleted file mode 100644
index fcfbd92..0000000
--- a/apps/bl602/switch_example/main/iot_cli_cmd.c
+++ /dev/null
@@ -1,100 +0,0 @@
-/* ***************************************************************************
- *
- * Copyright 2019 Samsung Electronics All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
- * either express or implied. See the License for the specific
- * language governing permissions and limitations under the License.
- *
- ****************************************************************************/
-
-#include <stdio.h>
-#include <stdlib.h>
-#include <string.h>
-
-#include "iot_uart_cli.h"
-#include "device_control.h"
-
-#include "st_dev.h"
-
-extern IOT_CTX *iot_ctx;
-
-static int _cli_copy_nth_arg(char* dest, char* src, int size, int n)
-{
-    int start = 0, end = -1;
-    int i = 0, word_index = 0;
-    int len;
-
-    for (i = 0; src[i] != '\0'; i++) {
-        if ((src[i] == ' ') && (src[i+1]!=' ') && (src[i+1]!='\0')) { //start check
-            word_index++;
-            if (word_index == n) {
-                start = i+1;
-            }
-        } else if ((src[i] != ' ') && ((src[i+1]==' ')||(src[i+1]=='\0'))) { //end check
-            if (word_index == n) {
-                end = i;
-                break;
-            }
-        }
-    }
-
-    if (end == -1) {
-        //printf("Fail to find %dth arg\n", n);
-        return -1;
-    }
-
-    len = end - start + 1;
-    if ( len > size - 1) {
-        len = size - 1;
-    }
-
-    strncpy(dest, &src[start], len);
-    dest[len] = '\0';
-    return 0;
-
-}
-
-static void _cli_cmd_cleanup(char *string)
-{
-    printf("clean-up data with reboot option");
-    st_conn_cleanup(iot_ctx, true);
-}
-
-extern void button_event(IOT_CAP_HANDLE *handle, int type, int count);
-static void _cli_cmd_butten_event(char *string)
-{
-    char buf[10];
-    int count = 1;
-    int type = BUTTON_SHORT_PRESS;
-
-    if (_cli_copy_nth_arg(buf, string, sizeof(buf), 1) >= 0) {
-        count = strtol(buf, NULL, 10);
-    }
-    if (_cli_copy_nth_arg(buf, string, sizeof(buf), 2) >= 0) {
-        if (strncmp(buf, "long", 4) == 0) {
-            type = BUTTON_LONG_PRESS;
-        }
-    }
-
-    printf("button_event : count %d, type %d\n", count, type);
-    button_event(iot_ctx, type, count);
-}
-
-static struct cli_command cmd_list[] = {
-    {"cleanup", "clean-up data with reboot option", _cli_cmd_cleanup},
-    {"button", "button {count} {type} : ex) button 5 / button 1 long", _cli_cmd_butten_event},
-};
-
-void register_iot_cli_cmd(void) {
-    for (int i = 0; i < ARRAY_SIZE(cmd_list); i++)
-        cli_register_command(&cmd_list[i]);
-}
diff --git a/apps/bl602/switch_example/main/iot_cli_cmd.h b/apps/bl602/switch_example/main/iot_cli_cmd.h
deleted file mode 100644
index aefe9ac..0000000
--- a/apps/bl602/switch_example/main/iot_cli_cmd.h
+++ /dev/null
@@ -1,19 +0,0 @@
-/* ***************************************************************************
- *
- * Copyright 2019 Samsung Electronics All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
- * either express or implied. See the License for the specific
- * language governing permissions and limitations under the License.
- *
- ****************************************************************************/
-
-void register_iot_cli_cmd(void);
diff --git a/apps/bl602/switch_example/main/iot_uart_cli.c b/apps/bl602/switch_example/main/iot_uart_cli.c
deleted file mode 100644
index 23f5430..0000000
--- a/apps/bl602/switch_example/main/iot_uart_cli.c
+++ /dev/null
@@ -1,320 +0,0 @@
-/* ***************************************************************************
- *
- * Copyright 2019-2020 Samsung Electronics All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
- * either express or implied. See the License for the specific
- * language governing permissions and limitations under the License.
- *
- ****************************************************************************/
-
-#include <stdio.h>
-#include <string.h>
-#include <stdlib.h>
-#include <string.h>
-
-#include "freertos/FreeRTOS.h"
-#include "freertos/task.h"
-
-#include "driver/uart.h"
-
-#include "iot_uart_cli.h"
-
-#define UART_BUF_SIZE (20)
-
-#define PROMPT_STRING "STDK # "
-
-/**
-* to decide whether the main function is running or not by user action...
-*  0 : running the main function
-*  1 : stop for a timeout
-*  2 : stop before selecting the go_main function.
-
-*/
-int g_StopMainTask = 0;
-
-static portMUX_TYPE spinlock = portMUX_INITIALIZER_UNLOCKED;
-
-static struct cli_command_list *cli_cmd_list;
-
-static void cli_cmd_help(char *string);
-
-static struct cli_command help_cmd = {
-    "help", "print command list", cli_cmd_help
-};
-
-
-static cli_cmd_t* cli_find_command (char* input_string) {
-    cli_cmd_list_t* now = cli_cmd_list;
-
-    while (now) {
-        if (!now->cmd)
-            continue;
-
-        if (strncmp(input_string, now->cmd->command, strlen(now->cmd->command)) == 0) {
-            switch (input_string[strlen(now->cmd->command)]) {
-                case ' ':
-                case '\r':
-                case '\n':
-                case '\0':
-                    return now->cmd;
-            }
-        }
-        now = now->next;
-    }
-
-    return NULL;
-}
-
-static void cli_process_command(char* input_string)
-{
-    cli_cmd_t *command;
-
-    command = cli_find_command(input_string);
-
-    if (command == NULL) {
-        printf("command not found. please check 'help'\n");
-        return;
-    }
-
-    command->command_fn(input_string);
-}
-
-void cli_register_command(cli_cmd_t* cmd)
-{
-    cli_cmd_list_t* now;
-
-
-    if ( (!cmd) || (!cmd->command) ) {
-        printf("register fail : cmd is invalid.\n");
-        return;
-    }
-
-    if (cli_find_command(cmd->command)) {
-        printf("register fail : same cmd is already exists.\n");
-        return;
-    }
-
-    if (!cli_cmd_list) {
-        cli_cmd_list = (cli_cmd_list_t*) malloc(sizeof(struct cli_command_list));
-        cli_cmd_list->next = NULL;
-        cli_cmd_list->cmd = cmd;
-    } else {
-        now = cli_cmd_list;
-        while (now->next) now = now->next;
-        now->next = (cli_cmd_list_t*) malloc(sizeof(struct cli_command_list));
-
-        now = now->next;
-        now->next = NULL;
-        now->cmd = cmd;
-    }
-}
-
-static void cli_cmd_help(char *cmd) {
-    cli_cmd_list_t* now = cli_cmd_list;
-
-    printf("----------Command List\n");
-    while (now) {
-        if (!now->cmd)
-            continue;
-
-        printf("%15s : %s\n", now->cmd->command, now->cmd->help_string);
-        now = now->next;
-    }
-}
-
-/**
-* If there is user input("\n") within a given timeout, the main function will be suspended.
-*
-*/
-static void _cli_util_wait_for_user_input(unsigned int timeout_ms)
-{
-    TickType_t cur = xTaskGetTickCount();
-    TickType_t end = cur + pdMS_TO_TICKS(timeout_ms);
-    while (xTaskGetTickCount() < end) {
-        portENTER_CRITICAL(&spinlock);
-        if (g_StopMainTask != 1) {
-            portEXIT_CRITICAL(&spinlock);
-            break;
-        }
-        portEXIT_CRITICAL(&spinlock);
-        vTaskDelay(100 / portTICK_PERIOD_MS);
-    }
-
-    portENTER_CRITICAL(&spinlock);
-    if (g_StopMainTask == 1) {
-        // When there is no input("\n") for a set time, main task will be executed...
-        g_StopMainTask = 0;
-    }
-    portEXIT_CRITICAL(&spinlock);
-
-    if (g_StopMainTask != 0) {
-        while (1) {
-            portENTER_CRITICAL(&spinlock);
-            if (g_StopMainTask == 0) {
-                portEXIT_CRITICAL(&spinlock);
-                break;
-            }
-            portEXIT_CRITICAL(&spinlock);
-            vTaskDelay(100 / portTICK_PERIOD_MS);
-        }
-    }
-}
-
-/**
- * This is an example which echos any data it receives on UART0 back to the sender,
- * with hardware flow control turned off. It does not use UART driver event queue.
- *
- * - Port: UART0
- * - Receive (Rx) buffer: on
- * - Transmit (Tx) buffer: off
- * - Flow control: off
- * - Event queue: off
- */
-
-static void esp_uart_init() {
-    // Configure parameters of an UART driver,
-    // communication pins and install the driver
-    uart_config_t uart_config = {
-#ifdef CONFIG_CONSOLE_UART_BAUDRATE
-        .baud_rate = CONFIG_CONSOLE_UART_BAUDRATE,
-#else
-        .baud_rate = 115200, // ROM default BAUDRATE
-#endif
-        .data_bits = UART_DATA_8_BITS,
-        .parity    = UART_PARITY_DISABLE,
-        .stop_bits = UART_STOP_BITS_1,
-        .flow_ctrl = UART_HW_FLOWCTRL_DISABLE
-    };
-    uart_param_config(UART_NUM_0, &uart_config);
-    uart_driver_install(UART_NUM_0, MAX_UART_LINE_SIZE * 2, 0, 0, NULL, ESP_INTR_FLAG_LOWMED);
-}
-
-static void esp_uart_cli_task()
-{
-
-    // Configure a temporary buffer for the incoming data
-    uint8_t data[UART_BUF_SIZE];
-    uint8_t line[MAX_UART_LINE_SIZE];
-    uint8_t prev_line[MAX_UART_LINE_SIZE];
-    memset(line, 0, MAX_UART_LINE_SIZE);
-    memset(prev_line, 0, MAX_UART_LINE_SIZE);
-    int line_len = 0;
-
-    cli_register_command(&help_cmd);
-
-    while (1) {
-        memset(data, 0, UART_BUF_SIZE);
-
-        // Read data from the UART
-        int len = uart_read_bytes(UART_NUM_0, data, UART_BUF_SIZE, 20 / portTICK_PERIOD_MS);
-        for (int i = 0; i < len; i++) {
-            switch(data[i])
-            {
-                case '\r':
-                case '\n':
-                    portENTER_CRITICAL(&spinlock);
-                    if (g_StopMainTask == 1) {
-                        // when there is a user input("\n") within a given timeout, this value will be chaned into 2.
-                        // but, if there is no user input within a given timeout, this value will be changed into 0 in order to run the main function
-                        g_StopMainTask = 2;
-                    }
-                    portEXIT_CRITICAL(&spinlock);
-
-                    uart_write_bytes(UART_NUM_0, "\r\n", 2);
-                    if (line_len) {
-                        cli_process_command((char *)line);
-                        memcpy(prev_line, line, MAX_UART_LINE_SIZE);
-                        memset(line, 0, MAX_UART_LINE_SIZE);
-                        line_len = 0;
-                    }
-                    uart_write_bytes(UART_NUM_0, PROMPT_STRING, sizeof(PROMPT_STRING));
-                    break;
-
-                case '\b':
-                    //backspace
-                    if (line_len > 0) {
-                        uart_write_bytes(UART_NUM_0, "\b \b", 3);
-                        line[--line_len] = '\0';
-                    }
-                    break;
-
-                case 0x03: //Ctrl + C
-                    uart_write_bytes(UART_NUM_0, "^C\n", 3);
-                    memset(line, 0, MAX_UART_LINE_SIZE);
-                    line_len = 0;
-                    uart_write_bytes(UART_NUM_0, PROMPT_STRING, sizeof(PROMPT_STRING));
-                    break;
-
-                case 0x1B: //arrow keys : 0x1B 0x5B 0x41~44
-                    if ( data[i+1] == 0x5B ) {
-                        switch (data[i+2]) {
-                            case 0x41: //UP
-                                memcpy(line, prev_line, MAX_UART_LINE_SIZE);
-                                line_len = strlen((char*)line);
-                                uart_write_bytes(UART_NUM_0, (const char *)&data[i+1], 2);
-                                uart_write_bytes(UART_NUM_0, "\r\n", 2);
-                                uart_write_bytes(UART_NUM_0, PROMPT_STRING, sizeof(PROMPT_STRING));
-                                uart_write_bytes(UART_NUM_0, (const char *)line, line_len);
-                                i+=3;
-                                break;
-                            case 0x42: //DOWN - ignore
-                                i+=3;
-                                break;
-                            case 0x43: //right
-                                if (line[line_len+1] != '\0') {
-                                    line_len += 1;
-                                    uart_write_bytes(UART_NUM_0, (const char *)&data[i], 3);
-                                }
-                                i+=3;
-                                break;
-                            case 0x44: //left
-                                if (line_len > 0) {
-                                    line_len -= 1;
-                                    uart_write_bytes(UART_NUM_0, (const char *)&data[i], 3);
-                                }
-                                i+=3;
-                                break;
-                            default:
-                                break;
-                        }
-                    }
-                    break;
-
-                    default:
-                    //check whether character is valid
-                    if ((data[i] >= ' ') && (data[i] <= '~')) {
-                        if (line_len >= MAX_UART_LINE_SIZE - 2)
-                            break;
-
-                        // print character back
-                        uart_write_bytes(UART_NUM_0, (const char *) &data[i], 1);
-
-                        line[line_len++] = data[i];
-                    }
-            } // switch data[i]
-        } //buf while loop
-    } //main loop
-
-
-}
-
-void uart_cli_main()
-{
-    /* to decide whether the main function is running or not by user action... */
-    g_StopMainTask = 1;    //default value is 1;  stop for a timeout
-
-    esp_uart_init();
-    xTaskCreate(esp_uart_cli_task, "uart_cli_task", CLI_TASK_SIZE, NULL, CLI_TASK_PRIORITY, NULL);
-
-    _cli_util_wait_for_user_input(2000);
-}
-
diff --git a/apps/bl602/switch_example/main/iot_uart_cli.h b/apps/bl602/switch_example/main/iot_uart_cli.h
deleted file mode 100644
index d29d24c..0000000
--- a/apps/bl602/switch_example/main/iot_uart_cli.h
+++ /dev/null
@@ -1,42 +0,0 @@
-/* ***************************************************************************
- *
- * Copyright 2019 Samsung Electronics All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
- * either express or implied. See the License for the specific
- * language governing permissions and limitations under the License.
- *
- ****************************************************************************/
-
-#ifndef _IOT_ESP_UART_CLI_H_
-#define _IOT_ESP_UART_CLI_H_
-
-#define ARRAY_SIZE(x) (int)(sizeof(x)/sizeof(x[0]))
-#define CLI_TASK_PRIORITY (5)
-#define CLI_TASK_SIZE    (8192)
-#define MAX_UART_LINE_SIZE    (1024)
-typedef void (* command_function_t)(char *string);
-
-typedef struct cli_command {
-    char *command;
-    char *help_string;
-    command_function_t command_fn;
-} cli_cmd_t;
-
-typedef struct cli_command_list {
-    cli_cmd_t* cmd;
-    struct cli_command_list* next;
-} cli_cmd_list_t;
-
-void uart_cli_main();
-void cli_register_command(cli_cmd_t* cmd);
-
-#endif /* _IOT_ESP_UART_CLI_H_ */
diff --git a/apps/bl602/switch_example/main/main.c b/apps/bl602/switch_example/main/main.c
deleted file mode 100644
index 26769a6..0000000
--- a/apps/bl602/switch_example/main/main.c
+++ /dev/null
@@ -1,272 +0,0 @@
-/* ***************************************************************************
- *
- * Copyright 2019 Samsung Electronics All Rights Reserved.
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- * http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing,
- * software distributed under the License is distributed on an
- * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
- * either express or implied. See the License for the specific
- * language governing permissions and limitations under the License.
- *
- ****************************************************************************/
-
-#include <stdbool.h>
-#include <stdlib.h>
-#include <string.h>
-
-#include "st_dev.h"
-#include "device_control.h"
-
-#include "freertos/FreeRTOS.h"
-#include "freertos/task.h"
-
-#include "iot_uart_cli.h"
-#include "iot_cli_cmd.h"
-
-#include "caps_switch.h"
-
-// onboarding_config_start is null-terminated string
-extern const uint8_t onboarding_config_start[]    asm("_binary_onboarding_config_json_start");
-extern const uint8_t onboarding_config_end[]    asm("_binary_onboarding_config_json_end");
-
-// device_info_start is null-terminated string
-extern const uint8_t device_info_start[]    asm("_binary_device_info_json_start");
-extern const uint8_t device_info_end[]        asm("_binary_device_info_json_end");
-
-static iot_status_t g_iot_status = IOT_STATUS_IDLE;
-static iot_stat_lv_t g_iot_stat_lv;
-
-IOT_CTX* iot_ctx = NULL;
-
-//#define SET_PIN_NUMBER_CONFRIM
-
-static int noti_led_mode = LED_ANIMATION_MODE_IDLE;
-
-static caps_switch_data_t *cap_switch_data;
-
-static int get_switch_state(void)
-{
-    const char* switch_value = cap_switch_data->get_switch_value(cap_switch_data);
-    int switch_state = SWITCH_OFF;
-
-    if (!switch_value) {
-        return -1;
-    }
-
-    if (!strcmp(switch_value, caps_helper_switch.attr_switch.value_on)) {
-        switch_state = SWITCH_ON;
-    } else if (!strcmp(switch_value, caps_helper_switch.attr_switch.value_off)) {
-        switch_state = SWITCH_OFF;
-    }
-    return switch_state;
-}
-
-static void cap_switch_cmd_cb(struct caps_switch_data *caps_data)
-{
-    int switch_state = get_switch_state();
-    change_switch_state(switch_state);
-}
-
-static void capability_init()
-{
-    cap_switch_data = caps_switch_initialize(iot_ctx, "main", NULL, NULL);
-    if (cap_switch_data) {
-        const char *switch_init_value = caps_helper_switch.attr_switch.value_on;
-
-        cap_switch_data->cmd_on_usr_cb = cap_switch_cmd_cb;
-        cap_switch_data->cmd_off_usr_cb = cap_switch_cmd_cb;
-
-        cap_switch_data->set_switch_value(cap_switch_data, switch_init_value);
-    }
-}
-
-static void iot_status_cb(iot_status_t status,
-                          iot_stat_lv_t stat_lv, void *usr_data)
-{
-    g_iot_status = status;
-    g_iot_stat_lv = stat_lv;
-
-    printf("status: %d, stat: %d\n", g_iot_status, g_iot_stat_lv);
-
-    switch(status)
-    {
-        case IOT_STATUS_NEED_INTERACT:
-            noti_led_mode = LED_ANIMATION_MODE_FAST;
-            break;
-        case IOT_STATUS_IDLE:
-        case IOT_STATUS_CONNECTING:
-            noti_led_mode = LED_ANIMATION_MODE_IDLE;
-            change_switch_state(get_switch_state());
-            break;
-        default:
-            break;
-    }
-}
-
-#if defined(SET_PIN_NUMBER_CONFRIM)
-void* pin_num_memcpy(void *dest, const void *src, unsigned int count)
-{
-    unsigned int i;
-    for (i = 0; i < count; i++)
-        *((char*)dest + i) = *((char*)src + i);
-    return dest;
-}
-#endif
-
-static void connection_start(void)
-{
-    iot_pin_t *pin_num = NULL;
-    int err;
-
-#if defined(SET_PIN_NUMBER_CONFRIM)
-    pin_num = (iot_pin_t *) malloc(sizeof(iot_pin_t));
-    if (!pin_num)
-        printf("failed to malloc for iot_pin_t\n");
-
-    // to decide the pin confirmation number(ex. "12345678"). It will use for easysetup.
-    //    pin confirmation number must be 8 digit number.
-    pin_num_memcpy(pin_num, "12345678", sizeof(iot_pin_t));
-#endif
-
-    // process on-boarding procedure. There is nothing more to do on the app side than call the API.
-    err = st_conn_start(iot_ctx, (st_status_cb)&iot_status_cb, IOT_STATUS_ALL, NULL, pin_num);
-    if (err) {
-        printf("fail to start connection. err:%d\n", err);
-    }
-    if (pin_num) {
-        free(pin_num);
-    }
-}
-
-static void connection_start_task(void *arg)
-{
-    connection_start();
-    vTaskDelete(NULL);
-}
-
-static void iot_noti_cb(iot_noti_data_t *noti_data, void *noti_usr_data)
-{
-    printf("Notification message received\n");
-
-    if (noti_data->type == IOT_NOTI_TYPE_DEV_DELETED) {
-        printf("[device deleted]\n");
-    } else if (noti_data->type == IOT_NOTI_TYPE_RATE_LIMIT) {
-        printf("[rate limit] Remaining time:%d, sequence number:%d\n",
-               noti_data->raw.rate_limit.remainingTime, noti_data->raw.rate_limit.sequenceNumber);
-    }
-}
-
-void button_event(IOT_CAP_HANDLE *handle, int type, int count)
-{
-    if (type == BUTTON_SHORT_PRESS) {
-        printf("Button short press, count: %d\n", count);
-        switch(count) {
-            case 1:
-                if (g_iot_status == IOT_STATUS_NEED_INTERACT) {
-                    st_conn_ownership_confirm(iot_ctx, true);
-                    noti_led_mode = LED_ANIMATION_MODE_IDLE;
-                    change_switch_state(get_switch_state());
-                } else {
-                    if (get_switch_state() == SWITCH_ON) {
-                        change_switch_state(SWITCH_OFF);
-                        cap_switch_data->set_switch_value(cap_switch_data, caps_helper_switch.attr_switch.value_off);
-                        cap_switch_data->attr_switch_send(cap_switch_data);
-                    } else {
-                        change_switch_state(SWITCH_ON);
-                        cap_switch_data->set_switch_value(cap_switch_data, caps_helper_switch.attr_switch.value_on);
-                        cap_switch_data->attr_switch_send(cap_switch_data);
-                    }
-                }
-                break;
-            case 5:
-                /* clean-up provisioning & registered data with reboot option*/
-                st_conn_cleanup(iot_ctx, true);
-
-                break;
-            default:
-                led_blink(get_switch_state(), 100, count);
-                break;
-        }
-    } else if (type == BUTTON_LONG_PRESS) {
-        printf("Button long press, iot_status: %d\n", g_iot_status);
-        led_blink(get_switch_state(), 100, 3);
-        st_conn_cleanup(iot_ctx, false);
-        xTaskCreate(connection_start_task, "connection_task", 2048, NULL, 10, NULL);
-    }
-}
-
-static void app_main_task(void *arg)
-{
-    IOT_CAP_HANDLE *handle = (IOT_CAP_HANDLE *)arg;
-
-    int button_event_type;
-    int button_event_count;
-
-    for (;;) {
-        if (get_button_event(&button_event_type, &button_event_count)) {
-            button_event(handle, button_event_type, button_event_count);
-        }
-        if (noti_led_mode != LED_ANIMATION_MODE_IDLE) {
-            change_led_mode(noti_led_mode);
-        }
-
-        vTaskDelay(10 / portTICK_PERIOD_MS);
-    }
-}
-
-void app_main(void)
-{
-    /**
-      SmartThings Device SDK(STDK) aims to make it easier to develop IoT devices by providing
-      additional st_iot_core layer to the existing chip vendor SW Architecture.
-
-      That is, you can simply develop a basic application
-      by just calling the APIs provided by st_iot_core layer like below.
-
-      // create a iot context
-      1. st_conn_init();
-
-      // create a handle to process capability
-      2. st_cap_handle_init(); (called in function 'capability_init')
-
-      // register a callback function to process capability command when it comes from the SmartThings Server.
-      3. st_cap_cmd_set_cb(); (called in function 'capability_init')
-
-      // process on-boarding procedure. There is nothing more to do on the app side than call the API.
-      4. st_conn_start(); (called in function 'connection_start')
-     */
-
-    unsigned char *onboarding_config = (unsigned char *) onboarding_config_start;
-    unsigned int onboarding_config_len = onboarding_config_end - onboarding_config_start;
-    unsigned char *device_info = (unsigned char *) device_info_start;
-    unsigned int device_info_len = device_info_end - device_info_start;
-
-    int iot_err;
-
-    // create a iot context
-    iot_ctx = st_conn_init(onboarding_config, onboarding_config_len, device_info, device_info_len);
-    if (iot_ctx != NULL) {
-        iot_err = st_conn_set_noti_cb(iot_ctx, iot_noti_cb, NULL);
-        if (iot_err)
-            printf("fail to set notification callback function\n");
-    } else {
-        printf("fail to create the iot_context\n");
-    }
-
-    // create a handle to process capability and initialize capability info
-    capability_init();
-
-    iot_gpio_init();
-    register_iot_cli_cmd();
-    uart_cli_main();
-    xTaskCreate(app_main_task, "app_main_task", 4096, NULL, 10, NULL);
-
-    // connect to server
-    connection_start();
-}
diff --git a/apps/bl602/switch_example/main/onboarding_config.json b/apps/bl602/switch_example/main/onboarding_config.json
deleted file mode 100644
index 4e3b809..0000000
--- a/apps/bl602/switch_example/main/onboarding_config.json
+++ /dev/null
@@ -1,21 +0,0 @@
-{
-  "onboardingConfig": {
-    "deviceOnboardingId": "NAME",
-    "mnId": "MNID",
-    "setupId": "999",
-    "vid": "VID",
-    "deviceTypeId": "TYPE",
-    "ownershipValidationTypes": [
-      "JUSTWORKS",
-      "BUTTON",
-      "PIN",
-      "QR"
-    ],
-    "identityType": "ED25519",
-    "deviceIntegrationProfileKey": {
-      "id": "DIP_UUID",
-      "majorVersion": 0,
-      "minorVersion": 1
-    }
-  }
-}
\ No newline at end of file
diff --git a/apps/bl602/switch_example/partitions.2MB.csv b/apps/bl602/switch_example/partitions.2MB.csv
deleted file mode 100644
index 3c872d8..0000000
--- a/apps/bl602/switch_example/partitions.2MB.csv
+++ /dev/null
@@ -1,8 +0,0 @@
-# Name,   Type, SubType, Offset,   Size,   Flags
-stnv,     data, nvs,     ,        0x4000,
-nvs,      data, nvs,     ,        0x4000,
-otadata,  data, ota,     ,        0x2000,
-phy_init, data, phy,     ,        0x1000,
-nvs_key,  data, nvs_keys, ,       0x1000, encrypted
-ota_0,    app,  ota_0,   ,        0x150000,
-ota_1,    app,  ota_1,   ,        0x150000,
diff --git a/apps/bl602/switch_example/sdkconfig b/apps/bl602/switch_example/sdkconfig
deleted file mode 100644
index 1383727..0000000
--- a/apps/bl602/switch_example/sdkconfig
+++ /dev/null
@@ -1,1797 +0,0 @@
-#
-# Automatically generated file. DO NOT EDIT.
-# Espressif IoT Development Framework (ESP-IDF) Project Configuration
-#
-CONFIG_SOC_BROWNOUT_RESET_SUPPORTED="Not determined"
-CONFIG_SOC_TWAI_BRP_DIV_SUPPORTED="Not determined"
-CONFIG_SOC_DPORT_WORKAROUND="Not determined"
-CONFIG_SOC_CAPS_ECO_VER_MAX=301
-CONFIG_SOC_ADC_SUPPORTED=y
-CONFIG_SOC_DAC_SUPPORTED=y
-CONFIG_SOC_MCPWM_SUPPORTED=y
-CONFIG_SOC_SDMMC_HOST_SUPPORTED=y
-CONFIG_SOC_BT_SUPPORTED=y
-CONFIG_SOC_PCNT_SUPPORTED=y
-CONFIG_SOC_WIFI_SUPPORTED=y
-CONFIG_SOC_SDIO_SLAVE_SUPPORTED=y
-CONFIG_SOC_TWAI_SUPPORTED=y
-CONFIG_SOC_EMAC_SUPPORTED=y
-CONFIG_SOC_ULP_SUPPORTED=y
-CONFIG_SOC_CCOMP_TIMER_SUPPORTED=y
-CONFIG_SOC_RTC_FAST_MEM_SUPPORTED=y
-CONFIG_SOC_RTC_SLOW_MEM_SUPPORTED=y
-CONFIG_SOC_RTC_MEM_SUPPORTED=y
-CONFIG_SOC_I2S_SUPPORTED=y
-CONFIG_SOC_RMT_SUPPORTED=y
-CONFIG_SOC_SDM_SUPPORTED=y
-CONFIG_SOC_SUPPORT_COEXISTENCE=y
-CONFIG_SOC_AES_SUPPORTED=y
-CONFIG_SOC_MPI_SUPPORTED=y
-CONFIG_SOC_SHA_SUPPORTED=y
-CONFIG_SOC_FLASH_ENC_SUPPORTED=y
-CONFIG_SOC_SECURE_BOOT_SUPPORTED=y
-CONFIG_SOC_TOUCH_SENSOR_SUPPORTED=y
-CONFIG_SOC_DPORT_WORKAROUND_DIS_INTERRUPT_LVL=5
-CONFIG_SOC_XTAL_SUPPORT_26M=y
-CONFIG_SOC_XTAL_SUPPORT_40M=y
-CONFIG_SOC_XTAL_SUPPORT_AUTO_DETECT=y
-CONFIG_SOC_ADC_RTC_CTRL_SUPPORTED=y
-CONFIG_SOC_ADC_DIG_CTRL_SUPPORTED=y
-CONFIG_SOC_ADC_DMA_SUPPORTED=y
-CONFIG_SOC_ADC_PERIPH_NUM=2
-CONFIG_SOC_ADC_MAX_CHANNEL_NUM=10
-CONFIG_SOC_ADC_ATTEN_NUM=4
-CONFIG_SOC_ADC_DIGI_CONTROLLER_NUM=2
-CONFIG_SOC_ADC_PATT_LEN_MAX=16
-CONFIG_SOC_ADC_DIGI_MIN_BITWIDTH=9
-CONFIG_SOC_ADC_DIGI_MAX_BITWIDTH=12
-CONFIG_SOC_ADC_DIGI_RESULT_BYTES=2
-CONFIG_SOC_ADC_DIGI_DATA_BYTES_PER_CONV=4
-CONFIG_SOC_ADC_SAMPLE_FREQ_THRES_HIGH=2
-CONFIG_SOC_ADC_SAMPLE_FREQ_THRES_LOW=20
-CONFIG_SOC_ADC_RTC_MIN_BITWIDTH=9
-CONFIG_SOC_ADC_RTC_MAX_BITWIDTH=12
-CONFIG_SOC_RTC_SLOW_CLOCK_SUPPORT_8MD256=y
-CONFIG_SOC_SHARED_IDCACHE_SUPPORTED=y
-CONFIG_SOC_IDCACHE_PER_CORE=y
-CONFIG_SOC_MMU_LINEAR_ADDRESS_REGION_NUM=5
-CONFIG_SOC_CPU_CORES_NUM=2
-CONFIG_SOC_CPU_INTR_NUM=32
-CONFIG_SOC_CPU_HAS_FPU=y
-CONFIG_SOC_CPU_BREAKPOINTS_NUM=2
-CONFIG_SOC_CPU_WATCHPOINTS_NUM=2
-CONFIG_SOC_CPU_WATCHPOINT_MAX_REGION_SIZE=64
-CONFIG_SOC_DAC_PERIPH_NUM=2
-CONFIG_SOC_DAC_RESOLUTION=8
-CONFIG_SOC_GPIO_PORT=1
-CONFIG_SOC_GPIO_PIN_COUNT=40
-CONFIG_SOC_GPIO_VALID_GPIO_MASK=0xFFFFFFFFFF
-CONFIG_SOC_GPIO_VALID_DIGITAL_IO_PAD_MASK=0xEF0FEA
-CONFIG_SOC_I2C_NUM=2
-CONFIG_SOC_I2C_FIFO_LEN=32
-CONFIG_SOC_I2C_SUPPORT_SLAVE=y
-CONFIG_SOC_I2C_SUPPORT_APB=y
-CONFIG_SOC_CLK_APLL_SUPPORTED=y
-CONFIG_SOC_APLL_MULTIPLIER_OUT_MIN_HZ=350000000
-CONFIG_SOC_APLL_MULTIPLIER_OUT_MAX_HZ=500000000
-CONFIG_SOC_APLL_MIN_HZ=5303031
-CONFIG_SOC_APLL_MAX_HZ=125000000
-CONFIG_SOC_I2S_NUM=2
-CONFIG_SOC_I2S_HW_VERSION_1=y
-CONFIG_SOC_I2S_SUPPORTS_APLL=y
-CONFIG_SOC_I2S_SUPPORTS_PDM=y
-CONFIG_SOC_I2S_SUPPORTS_PDM_TX=y
-CONFIG_SOC_I2S_SUPPORTS_PDM_RX=y
-CONFIG_SOC_I2S_SUPPORTS_ADC_DAC=y
-CONFIG_SOC_I2S_SUPPORTS_ADC=y
-CONFIG_SOC_I2S_SUPPORTS_DAC=y
-CONFIG_SOC_I2S_SUPPORTS_LCD_CAMERA=y
-CONFIG_SOC_I2S_TRANS_SIZE_ALIGN_WORD=y
-CONFIG_SOC_I2S_LCD_I80_VARIANT=y
-CONFIG_SOC_LCD_I80_SUPPORTED=y
-CONFIG_SOC_LCD_I80_BUSES=2
-CONFIG_SOC_LCD_I80_BUS_WIDTH=24
-CONFIG_SOC_LEDC_HAS_TIMER_SPECIFIC_MUX=y
-CONFIG_SOC_LEDC_SUPPORT_APB_CLOCK=y
-CONFIG_SOC_LEDC_SUPPORT_REF_TICK=y
-CONFIG_SOC_LEDC_SUPPORT_HS_MODE=y
-CONFIG_SOC_LEDC_CHANNEL_NUM=8
-CONFIG_SOC_LEDC_TIMER_BIT_WIDE_NUM=20
-CONFIG_SOC_MCPWM_GROUPS=2
-CONFIG_SOC_MCPWM_TIMERS_PER_GROUP=3
-CONFIG_SOC_MCPWM_OPERATORS_PER_GROUP=3
-CONFIG_SOC_MCPWM_COMPARATORS_PER_OPERATOR=2
-CONFIG_SOC_MCPWM_GENERATORS_PER_OPERATOR=2
-CONFIG_SOC_MCPWM_TRIGGERS_PER_OPERATOR=2
-CONFIG_SOC_MCPWM_GPIO_FAULTS_PER_GROUP=3
-CONFIG_SOC_MCPWM_CAPTURE_TIMERS_PER_GROUP=y
-CONFIG_SOC_MCPWM_CAPTURE_CHANNELS_PER_TIMER=3
-CONFIG_SOC_MCPWM_GPIO_SYNCHROS_PER_GROUP=3
-CONFIG_SOC_MPU_MIN_REGION_SIZE=0x20000000
-CONFIG_SOC_MPU_REGIONS_MAX_NUM=8
-CONFIG_SOC_PCNT_GROUPS=1
-CONFIG_SOC_PCNT_UNITS_PER_GROUP=8
-CONFIG_SOC_PCNT_CHANNELS_PER_UNIT=2
-CONFIG_SOC_PCNT_THRES_POINT_PER_UNIT=2
-CONFIG_SOC_RMT_GROUPS=1
-CONFIG_SOC_RMT_TX_CANDIDATES_PER_GROUP=8
-CONFIG_SOC_RMT_RX_CANDIDATES_PER_GROUP=8
-CONFIG_SOC_RMT_CHANNELS_PER_GROUP=8
-CONFIG_SOC_RMT_MEM_WORDS_PER_CHANNEL=64
-CONFIG_SOC_RMT_SUPPORT_REF_TICK=y
-CONFIG_SOC_RMT_SUPPORT_APB=y
-CONFIG_SOC_RMT_CHANNEL_CLK_INDEPENDENT=y
-CONFIG_SOC_RTCIO_PIN_COUNT=18
-CONFIG_SOC_RTCIO_INPUT_OUTPUT_SUPPORTED=y
-CONFIG_SOC_RTCIO_HOLD_SUPPORTED=y
-CONFIG_SOC_RTCIO_WAKE_SUPPORTED=y
-CONFIG_SOC_SDM_GROUPS=1
-CONFIG_SOC_SDM_CHANNELS_PER_GROUP=8
-CONFIG_SOC_SPI_HD_BOTH_INOUT_SUPPORTED=y
-CONFIG_SOC_SPI_AS_CS_SUPPORTED=y
-CONFIG_SOC_SPI_PERIPH_NUM=3
-CONFIG_SOC_SPI_DMA_CHAN_NUM=2
-CONFIG_SOC_SPI_MAX_CS_NUM=3
-CONFIG_SOC_SPI_MAXIMUM_BUFFER_SIZE=64
-CONFIG_SOC_SPI_MAX_PRE_DIVIDER=8192
-CONFIG_SOC_MEMSPI_SRC_FREQ_80M_SUPPORTED=y
-CONFIG_SOC_MEMSPI_SRC_FREQ_40M_SUPPORTED=y
-CONFIG_SOC_MEMSPI_SRC_FREQ_26M_SUPPORTED=y
-CONFIG_SOC_MEMSPI_SRC_FREQ_20M_SUPPORTED=y
-CONFIG_SOC_TIMER_GROUPS=2
-CONFIG_SOC_TIMER_GROUP_TIMERS_PER_GROUP=2
-CONFIG_SOC_TIMER_GROUP_COUNTER_BIT_WIDTH=64
-CONFIG_SOC_TIMER_GROUP_TOTAL_TIMERS=4
-CONFIG_SOC_TIMER_GROUP_SUPPORT_APB=y
-CONFIG_SOC_TOUCH_VERSION_1=y
-CONFIG_SOC_TOUCH_SENSOR_NUM=10
-CONFIG_SOC_TOUCH_PAD_MEASURE_WAIT_MAX=0xFF
-CONFIG_SOC_TWAI_BRP_MIN=2
-CONFIG_SOC_TWAI_SUPPORT_MULTI_ADDRESS_LAYOUT=y
-CONFIG_SOC_UART_NUM=3
-CONFIG_SOC_UART_SUPPORT_APB_CLK=y
-CONFIG_SOC_UART_SUPPORT_REF_TICK=y
-CONFIG_SOC_UART_FIFO_LEN=128
-CONFIG_SOC_UART_BITRATE_MAX=5000000
-CONFIG_SOC_SPIRAM_SUPPORTED=y
-CONFIG_SOC_SPI_MEM_SUPPORT_CONFIG_GPIO_BY_EFUSE=y
-CONFIG_SOC_SHA_SUPPORT_PARALLEL_ENG=y
-CONFIG_SOC_SHA_SUPPORT_SHA1=y
-CONFIG_SOC_SHA_SUPPORT_SHA256=y
-CONFIG_SOC_SHA_SUPPORT_SHA384=y
-CONFIG_SOC_SHA_SUPPORT_SHA512=y
-CONFIG_SOC_RSA_MAX_BIT_LEN=4096
-CONFIG_SOC_AES_SUPPORT_AES_128=y
-CONFIG_SOC_AES_SUPPORT_AES_192=y
-CONFIG_SOC_AES_SUPPORT_AES_256=y
-CONFIG_SOC_SECURE_BOOT_V1=y
-CONFIG_SOC_EFUSE_SECURE_BOOT_KEY_DIGESTS=y
-CONFIG_SOC_FLASH_ENCRYPTED_XTS_AES_BLOCK_MAX=32
-CONFIG_SOC_PHY_DIG_REGS_MEM_SIZE=21
-CONFIG_SOC_PM_SUPPORT_EXT_WAKEUP=y
-CONFIG_SOC_PM_SUPPORT_TOUCH_SENSOR_WAKEUP=y
-CONFIG_SOC_PM_SUPPORT_RTC_PERIPH_PD=y
-CONFIG_SOC_PM_SUPPORT_RTC_FAST_MEM_PD=y
-CONFIG_SOC_PM_SUPPORT_RTC_SLOW_MEM_PD=y
-CONFIG_SOC_PM_SUPPORT_MODEM_PD=y
-CONFIG_SOC_SDMMC_USE_IOMUX=y
-CONFIG_SOC_SDMMC_NUM_SLOTS=2
-CONFIG_SOC_WIFI_WAPI_SUPPORT=y
-CONFIG_SOC_WIFI_CSI_SUPPORT=y
-CONFIG_SOC_WIFI_MESH_SUPPORT=y
-CONFIG_SOC_BLE_SUPPORTED=y
-CONFIG_SOC_BLE_MESH_SUPPORTED=y
-CONFIG_SOC_BT_CLASSIC_SUPPORTED=y
-CONFIG_IDF_CMAKE=y
-CONFIG_IDF_TARGET_ARCH_XTENSA=y
-CONFIG_IDF_TARGET_ARCH="xtensa"
-CONFIG_IDF_TARGET="esp32"
-CONFIG_IDF_TARGET_ESP32=y
-CONFIG_IDF_FIRMWARE_CHIP_ID=0x0000
-
-#
-# Build type
-#
-CONFIG_APP_BUILD_TYPE_APP_2NDBOOT=y
-# CONFIG_APP_BUILD_TYPE_ELF_RAM is not set
-CONFIG_APP_BUILD_GENERATE_BINARIES=y
-CONFIG_APP_BUILD_BOOTLOADER=y
-CONFIG_APP_BUILD_USE_FLASH_SECTIONS=y
-# CONFIG_APP_REPRODUCIBLE_BUILD is not set
-# CONFIG_APP_NO_BLOBS is not set
-# CONFIG_APP_COMPATIBLE_PRE_V2_1_BOOTLOADERS is not set
-# CONFIG_APP_COMPATIBLE_PRE_V3_1_BOOTLOADERS is not set
-# end of Build type
-
-#
-# Bootloader config
-#
-CONFIG_BOOTLOADER_OFFSET_IN_FLASH=0x1000
-CONFIG_BOOTLOADER_COMPILER_OPTIMIZATION_SIZE=y
-# CONFIG_BOOTLOADER_COMPILER_OPTIMIZATION_DEBUG is not set
-# CONFIG_BOOTLOADER_COMPILER_OPTIMIZATION_PERF is not set
-# CONFIG_BOOTLOADER_COMPILER_OPTIMIZATION_NONE is not set
-# CONFIG_BOOTLOADER_LOG_LEVEL_NONE is not set
-# CONFIG_BOOTLOADER_LOG_LEVEL_ERROR is not set
-# CONFIG_BOOTLOADER_LOG_LEVEL_WARN is not set
-CONFIG_BOOTLOADER_LOG_LEVEL_INFO=y
-# CONFIG_BOOTLOADER_LOG_LEVEL_DEBUG is not set
-# CONFIG_BOOTLOADER_LOG_LEVEL_VERBOSE is not set
-CONFIG_BOOTLOADER_LOG_LEVEL=3
-
-#
-# Serial Flash Configurations
-#
-# CONFIG_BOOTLOADER_FLASH_DC_AWARE is not set
-CONFIG_BOOTLOADER_FLASH_XMC_SUPPORT=y
-# end of Serial Flash Configurations
-
-# CONFIG_BOOTLOADER_VDDSDIO_BOOST_1_8V is not set
-CONFIG_BOOTLOADER_VDDSDIO_BOOST_1_9V=y
-# CONFIG_BOOTLOADER_FACTORY_RESET is not set
-# CONFIG_BOOTLOADER_APP_TEST is not set
-CONFIG_BOOTLOADER_REGION_PROTECTION_ENABLE=y
-CONFIG_BOOTLOADER_WDT_ENABLE=y
-# CONFIG_BOOTLOADER_WDT_DISABLE_IN_USER_CODE is not set
-CONFIG_BOOTLOADER_WDT_TIME_MS=9000
-# CONFIG_BOOTLOADER_APP_ROLLBACK_ENABLE is not set
-# CONFIG_BOOTLOADER_SKIP_VALIDATE_IN_DEEP_SLEEP is not set
-# CONFIG_BOOTLOADER_SKIP_VALIDATE_ON_POWER_ON is not set
-# CONFIG_BOOTLOADER_SKIP_VALIDATE_ALWAYS is not set
-CONFIG_BOOTLOADER_RESERVE_RTC_SIZE=0
-# CONFIG_BOOTLOADER_CUSTOM_RESERVE_RTC is not set
-# end of Bootloader config
-
-#
-# Security features
-#
-CONFIG_SECURE_BOOT_V1_SUPPORTED=y
-# CONFIG_SECURE_SIGNED_APPS_NO_SECURE_BOOT is not set
-# CONFIG_SECURE_BOOT is not set
-# CONFIG_SECURE_FLASH_ENC_ENABLED is not set
-# end of Security features
-
-#
-# Application manager
-#
-CONFIG_APP_COMPILE_TIME_DATE=y
-# CONFIG_APP_EXCLUDE_PROJECT_VER_VAR is not set
-# CONFIG_APP_EXCLUDE_PROJECT_NAME_VAR is not set
-# CONFIG_APP_PROJECT_VER_FROM_CONFIG is not set
-CONFIG_APP_RETRIEVE_LEN_ELF_SHA=16
-# end of Application manager
-
-CONFIG_ESP_ROM_HAS_CRC_LE=y
-CONFIG_ESP_ROM_HAS_CRC_BE=y
-CONFIG_ESP_ROM_HAS_MZ_CRC32=y
-CONFIG_ESP_ROM_HAS_JPEG_DECODE=y
-CONFIG_ESP_ROM_NEEDS_SWSETUP_WORKAROUND=y
-
-#
-# Serial flasher config
-#
-# CONFIG_ESPTOOLPY_NO_STUB is not set
-# CONFIG_ESPTOOLPY_FLASHMODE_QIO is not set
-# CONFIG_ESPTOOLPY_FLASHMODE_QOUT is not set
-CONFIG_ESPTOOLPY_FLASHMODE_DIO=y
-# CONFIG_ESPTOOLPY_FLASHMODE_DOUT is not set
-CONFIG_ESPTOOLPY_FLASH_SAMPLE_MODE_STR=y
-CONFIG_ESPTOOLPY_FLASHMODE="dio"
-# CONFIG_ESPTOOLPY_FLASHFREQ_80M is not set
-CONFIG_ESPTOOLPY_FLASHFREQ_40M=y
-# CONFIG_ESPTOOLPY_FLASHFREQ_26M is not set
-# CONFIG_ESPTOOLPY_FLASHFREQ_20M is not set
-CONFIG_ESPTOOLPY_FLASHFREQ="40m"
-# CONFIG_ESPTOOLPY_FLASHSIZE_1MB is not set
-# CONFIG_ESPTOOLPY_FLASHSIZE_2MB is not set
-CONFIG_ESPTOOLPY_FLASHSIZE_4MB=y
-# CONFIG_ESPTOOLPY_FLASHSIZE_8MB is not set
-# CONFIG_ESPTOOLPY_FLASHSIZE_16MB is not set
-# CONFIG_ESPTOOLPY_FLASHSIZE_32MB is not set
-# CONFIG_ESPTOOLPY_FLASHSIZE_64MB is not set
-# CONFIG_ESPTOOLPY_FLASHSIZE_128MB is not set
-CONFIG_ESPTOOLPY_FLASHSIZE="4MB"
-# CONFIG_ESPTOOLPY_HEADER_FLASHSIZE_UPDATE is not set
-CONFIG_ESPTOOLPY_BEFORE_RESET=y
-# CONFIG_ESPTOOLPY_BEFORE_NORESET is not set
-CONFIG_ESPTOOLPY_BEFORE="default_reset"
-CONFIG_ESPTOOLPY_AFTER_RESET=y
-# CONFIG_ESPTOOLPY_AFTER_NORESET is not set
-CONFIG_ESPTOOLPY_AFTER="hard_reset"
-CONFIG_ESPTOOLPY_MONITOR_BAUD=115200
-# end of Serial flasher config
-
-#
-# Partition Table
-#
-# CONFIG_PARTITION_TABLE_SINGLE_APP is not set
-# CONFIG_PARTITION_TABLE_SINGLE_APP_LARGE is not set
-# CONFIG_PARTITION_TABLE_TWO_OTA is not set
-CONFIG_PARTITION_TABLE_CUSTOM=y
-CONFIG_PARTITION_TABLE_CUSTOM_FILENAME="partitions.2MB.csv"
-CONFIG_PARTITION_TABLE_FILENAME="partitions.2MB.csv"
-CONFIG_PARTITION_TABLE_OFFSET=0x8000
-CONFIG_PARTITION_TABLE_MD5=y
-# end of Partition Table
-
-#
-# Example Configuration
-#
-CONFIG_WIFI_SSID="myssid"
-CONFIG_WIFI_PASSWORD="mypassword"
-CONFIG_MQTT_BROKER="mosquitto.org"
-CONFIG_MQTT_PORT=1883
-CONFIG_MQTT_SUB_TOPIC="/espressif/sub"
-# CONFIG_SUB_QOS0 is not set
-CONFIG_SUB_QOS1=y
-# CONFIG_SUB_QOS2 is not set
-CONFIG_DEFAULT_MQTT_SUB_QOS=1
-CONFIG_MQTT_PUB_TOPIC="/espressif/pub"
-# CONFIG_PUB_QOS0 is not set
-CONFIG_PUB_QOS1=y
-# CONFIG_PUB_QOS2 is not set
-CONFIG_DEFAULT_MQTT_PUB_QOS=1
-CONFIG_MQTT_PUBLISH_INTERVAL=0
-CONFIG_MQTT_PAYLOAD_BUFFER=1460
-# end of Example Configuration
-
-#
-# Compiler options
-#
-CONFIG_COMPILER_OPTIMIZATION_DEFAULT=y
-# CONFIG_COMPILER_OPTIMIZATION_SIZE is not set
-# CONFIG_COMPILER_OPTIMIZATION_PERF is not set
-# CONFIG_COMPILER_OPTIMIZATION_NONE is not set
-CONFIG_COMPILER_OPTIMIZATION_ASSERTIONS_ENABLE=y
-# CONFIG_COMPILER_OPTIMIZATION_ASSERTIONS_SILENT is not set
-# CONFIG_COMPILER_OPTIMIZATION_ASSERTIONS_DISABLE is not set
-CONFIG_COMPILER_FLOAT_LIB_FROM_GCCLIB=y
-CONFIG_COMPILER_OPTIMIZATION_ASSERTION_LEVEL=2
-# CONFIG_COMPILER_OPTIMIZATION_CHECKS_SILENT is not set
-CONFIG_COMPILER_HIDE_PATHS_MACROS=y
-# CONFIG_COMPILER_CXX_EXCEPTIONS is not set
-# CONFIG_COMPILER_CXX_RTTI is not set
-CONFIG_COMPILER_STACK_CHECK_MODE_NONE=y
-# CONFIG_COMPILER_STACK_CHECK_MODE_NORM is not set
-# CONFIG_COMPILER_STACK_CHECK_MODE_STRONG is not set
-# CONFIG_COMPILER_STACK_CHECK_MODE_ALL is not set
-# CONFIG_COMPILER_WARN_WRITE_STRINGS is not set
-# CONFIG_COMPILER_DUMP_RTL_FILES is not set
-# end of Compiler options
-
-#
-# Component config
-#
-
-#
-# Application Level Tracing
-#
-# CONFIG_APPTRACE_DEST_JTAG is not set
-CONFIG_APPTRACE_DEST_NONE=y
-# CONFIG_APPTRACE_DEST_UART1 is not set
-# CONFIG_APPTRACE_DEST_UART2 is not set
-CONFIG_APPTRACE_DEST_UART_NONE=y
-CONFIG_APPTRACE_UART_TASK_PRIO=1
-CONFIG_APPTRACE_LOCK_ENABLE=y
-# end of Application Level Tracing
-
-#
-# Bluetooth
-#
-# CONFIG_BT_ENABLED is not set
-CONFIG_BT_ALARM_MAX_NUM=50
-# end of Bluetooth
-
-#
-# Driver Configurations
-#
-
-#
-# Legacy ADC Configuration
-#
-CONFIG_ADC_DISABLE_DAC=y
-# CONFIG_ADC_SUPPRESS_DEPRECATE_WARN is not set
-
-#
-# Legacy ADC Calibration Configuration
-#
-CONFIG_ADC_CAL_EFUSE_TP_ENABLE=y
-CONFIG_ADC_CAL_EFUSE_VREF_ENABLE=y
-CONFIG_ADC_CAL_LUT_ENABLE=y
-# CONFIG_ADC_CALI_SUPPRESS_DEPRECATE_WARN is not set
-# end of Legacy ADC Calibration Configuration
-# end of Legacy ADC Configuration
-
-#
-# SPI Configuration
-#
-# CONFIG_SPI_MASTER_IN_IRAM is not set
-CONFIG_SPI_MASTER_ISR_IN_IRAM=y
-# CONFIG_SPI_SLAVE_IN_IRAM is not set
-CONFIG_SPI_SLAVE_ISR_IN_IRAM=y
-# end of SPI Configuration
-
-#
-# TWAI Configuration
-#
-# CONFIG_TWAI_ISR_IN_IRAM is not set
-CONFIG_TWAI_ERRATA_FIX_BUS_OFF_REC=y
-CONFIG_TWAI_ERRATA_FIX_TX_INTR_LOST=y
-CONFIG_TWAI_ERRATA_FIX_RX_FRAME_INVALID=y
-CONFIG_TWAI_ERRATA_FIX_RX_FIFO_CORRUPT=y
-CONFIG_TWAI_ERRATA_FIX_LISTEN_ONLY_DOM=y
-# end of TWAI Configuration
-
-#
-# UART Configuration
-#
-# CONFIG_UART_ISR_IN_IRAM is not set
-# end of UART Configuration
-
-#
-# GPIO Configuration
-#
-# CONFIG_GPIO_ESP32_SUPPORT_SWITCH_SLP_PULL is not set
-# CONFIG_GPIO_CTRL_FUNC_IN_IRAM is not set
-# end of GPIO Configuration
-
-#
-# Sigma Delta Modulator Configuration
-#
-# CONFIG_SDM_CTRL_FUNC_IN_IRAM is not set
-# CONFIG_SDM_SUPPRESS_DEPRECATE_WARN is not set
-# CONFIG_SDM_ENABLE_DEBUG_LOG is not set
-# end of Sigma Delta Modulator Configuration
-
-#
-# GPTimer Configuration
-#
-# CONFIG_GPTIMER_CTRL_FUNC_IN_IRAM is not set
-# CONFIG_GPTIMER_ISR_IRAM_SAFE is not set
-# CONFIG_GPTIMER_SUPPRESS_DEPRECATE_WARN is not set
-# CONFIG_GPTIMER_ENABLE_DEBUG_LOG is not set
-# end of GPTimer Configuration
-
-#
-# PCNT Configuration
-#
-# CONFIG_PCNT_CTRL_FUNC_IN_IRAM is not set
-# CONFIG_PCNT_ISR_IRAM_SAFE is not set
-# CONFIG_PCNT_SUPPRESS_DEPRECATE_WARN is not set
-# CONFIG_PCNT_ENABLE_DEBUG_LOG is not set
-# end of PCNT Configuration
-
-#
-# RMT Configuration
-#
-# CONFIG_RMT_ISR_IRAM_SAFE is not set
-# CONFIG_RMT_RECV_FUNC_IN_IRAM is not set
-# CONFIG_RMT_SUPPRESS_DEPRECATE_WARN is not set
-# CONFIG_RMT_ENABLE_DEBUG_LOG is not set
-# end of RMT Configuration
-
-#
-# MCPWM Configuration
-#
-# CONFIG_MCPWM_ISR_IRAM_SAFE is not set
-# CONFIG_MCPWM_CTRL_FUNC_IN_IRAM is not set
-# CONFIG_MCPWM_SUPPRESS_DEPRECATE_WARN is not set
-# CONFIG_MCPWM_ENABLE_DEBUG_LOG is not set
-# end of MCPWM Configuration
-
-#
-# I2S Configuration
-#
-# CONFIG_I2S_ISR_IRAM_SAFE is not set
-# CONFIG_I2S_SUPPRESS_DEPRECATE_WARN is not set
-# CONFIG_I2S_ENABLE_DEBUG_LOG is not set
-# end of I2S Configuration
-# end of Driver Configurations
-
-#
-# eFuse Bit Manager
-#
-# CONFIG_EFUSE_CUSTOM_TABLE is not set
-# CONFIG_EFUSE_VIRTUAL is not set
-# CONFIG_EFUSE_CODE_SCHEME_COMPAT_NONE is not set
-CONFIG_EFUSE_CODE_SCHEME_COMPAT_3_4=y
-# CONFIG_EFUSE_CODE_SCHEME_COMPAT_REPEAT is not set
-CONFIG_EFUSE_MAX_BLK_LEN=192
-# end of eFuse Bit Manager
-
-#
-# ESP-TLS
-#
-CONFIG_ESP_TLS_USING_MBEDTLS=y
-# CONFIG_ESP_TLS_USE_SECURE_ELEMENT is not set
-# CONFIG_ESP_TLS_CLIENT_SESSION_TICKETS is not set
-# CONFIG_ESP_TLS_SERVER is not set
-# CONFIG_ESP_TLS_PSK_VERIFICATION is not set
-# CONFIG_ESP_TLS_INSECURE is not set
-# end of ESP-TLS
-
-#
-# ADC and ADC Calibration
-#
-# CONFIG_ADC_ONESHOT_CTRL_FUNC_IN_IRAM is not set
-# CONFIG_ADC_CONTINUOUS_ISR_IRAM_SAFE is not set
-
-#
-# ADC Calibration Configurations
-#
-CONFIG_ADC_CALI_EFUSE_TP_ENABLE=y
-CONFIG_ADC_CALI_EFUSE_VREF_ENABLE=y
-CONFIG_ADC_CALI_LUT_ENABLE=y
-# end of ADC Calibration Configurations
-
-CONFIG_ADC_DISABLE_DAC_OUTPUT=y
-# end of ADC and ADC Calibration
-
-#
-# Common ESP-related
-#
-CONFIG_ESP_ERR_TO_NAME_LOOKUP=y
-# end of Common ESP-related
-
-#
-# Ethernet
-#
-CONFIG_ETH_ENABLED=y
-CONFIG_ETH_USE_ESP32_EMAC=y
-CONFIG_ETH_PHY_INTERFACE_RMII=y
-CONFIG_ETH_RMII_CLK_INPUT=y
-# CONFIG_ETH_RMII_CLK_OUTPUT is not set
-CONFIG_ETH_RMII_CLK_IN_GPIO=0
-CONFIG_ETH_DMA_BUFFER_SIZE=512
-CONFIG_ETH_DMA_RX_BUFFER_NUM=10
-CONFIG_ETH_DMA_TX_BUFFER_NUM=10
-# CONFIG_ETH_IRAM_OPTIMIZATION is not set
-CONFIG_ETH_USE_SPI_ETHERNET=y
-# CONFIG_ETH_SPI_ETHERNET_DM9051 is not set
-# CONFIG_ETH_SPI_ETHERNET_W5500 is not set
-# CONFIG_ETH_SPI_ETHERNET_KSZ8851SNL is not set
-# CONFIG_ETH_USE_OPENETH is not set
-# CONFIG_ETH_TRANSMIT_MUTEX is not set
-# end of Ethernet
-
-#
-# Event Loop Library
-#
-# CONFIG_ESP_EVENT_LOOP_PROFILING is not set
-CONFIG_ESP_EVENT_POST_FROM_ISR=y
-CONFIG_ESP_EVENT_POST_FROM_IRAM_ISR=y
-# end of Event Loop Library
-
-#
-# GDB Stub
-#
-# end of GDB Stub
-
-#
-# ESP HTTP client
-#
-CONFIG_ESP_HTTP_CLIENT_ENABLE_HTTPS=y
-# CONFIG_ESP_HTTP_CLIENT_ENABLE_BASIC_AUTH is not set
-# CONFIG_ESP_HTTP_CLIENT_ENABLE_DIGEST_AUTH is not set
-# end of ESP HTTP client
-
-#
-# HTTP Server
-#
-CONFIG_HTTPD_MAX_REQ_HDR_LEN=512
-CONFIG_HTTPD_MAX_URI_LEN=512
-CONFIG_HTTPD_ERR_RESP_NO_DELAY=y
-CONFIG_HTTPD_PURGE_BUF_LEN=32
-# CONFIG_HTTPD_LOG_PURGE_DATA is not set
-# CONFIG_HTTPD_WS_SUPPORT is not set
-# CONFIG_HTTPD_QUEUE_WORK_BLOCKING is not set
-# end of HTTP Server
-
-#
-# ESP HTTPS OTA
-#
-# CONFIG_ESP_HTTPS_OTA_DECRYPT_CB is not set
-# CONFIG_ESP_HTTPS_OTA_ALLOW_HTTP is not set
-# end of ESP HTTPS OTA
-
-#
-# ESP HTTPS server
-#
-# CONFIG_ESP_HTTPS_SERVER_ENABLE is not set
-# end of ESP HTTPS server
-
-#
-# Hardware Settings
-#
-
-#
-# Chip revision
-#
-CONFIG_ESP32_REV_MIN_0=y
-# CONFIG_ESP32_REV_MIN_1 is not set
-# CONFIG_ESP32_REV_MIN_1_1 is not set
-# CONFIG_ESP32_REV_MIN_2 is not set
-# CONFIG_ESP32_REV_MIN_3 is not set
-# CONFIG_ESP32_REV_MIN_3_1 is not set
-CONFIG_ESP32_REV_MIN=0
-CONFIG_ESP32_REV_MIN_FULL=0
-CONFIG_ESP_REV_MIN_FULL=0
-
-#
-# Maximum Supported ESP32 Revision (Rev v3.99)
-#
-CONFIG_ESP32_REV_MAX_FULL=399
-CONFIG_ESP_REV_MAX_FULL=399
-# end of Chip revision
-
-#
-# MAC Config
-#
-CONFIG_ESP_MAC_ADDR_UNIVERSE_WIFI_STA=y
-CONFIG_ESP_MAC_ADDR_UNIVERSE_WIFI_AP=y
-CONFIG_ESP_MAC_ADDR_UNIVERSE_BT=y
-CONFIG_ESP_MAC_ADDR_UNIVERSE_ETH=y
-# CONFIG_ESP32_UNIVERSAL_MAC_ADDRESSES_TWO is not set
-CONFIG_ESP32_UNIVERSAL_MAC_ADDRESSES_FOUR=y
-CONFIG_ESP32_UNIVERSAL_MAC_ADDRESSES=4
-# CONFIG_ESP_MAC_IGNORE_MAC_CRC_ERROR is not set
-# end of MAC Config
-
-#
-# Sleep Config
-#
-# CONFIG_ESP_SLEEP_POWER_DOWN_FLASH is not set
-CONFIG_ESP_SLEEP_FLASH_LEAKAGE_WORKAROUND=y
-# CONFIG_ESP_SLEEP_MSPI_NEED_ALL_IO_PU is not set
-CONFIG_ESP_SLEEP_RTC_BUS_ISO_WORKAROUND=y
-# CONFIG_ESP_SLEEP_GPIO_RESET_WORKAROUND is not set
-CONFIG_ESP_SLEEP_DEEP_SLEEP_WAKEUP_DELAY=2000
-CONFIG_ESP_SLEEP_GPIO_ENABLE_INTERNAL_RESISTORS=y
-# end of Sleep Config
-
-#
-# RTC Clock Config
-#
-CONFIG_RTC_CLK_SRC_INT_RC=y
-# CONFIG_RTC_CLK_SRC_EXT_CRYS is not set
-# CONFIG_RTC_CLK_SRC_EXT_OSC is not set
-# CONFIG_RTC_CLK_SRC_INT_8MD256 is not set
-CONFIG_RTC_CLK_CAL_CYCLES=1024
-# end of RTC Clock Config
-
-#
-# Peripheral Control
-#
-# CONFIG_PERIPH_CTRL_FUNC_IN_IRAM is not set
-# end of Peripheral Control
-
-#
-# Main XTAL Config
-#
-# CONFIG_XTAL_FREQ_26 is not set
-CONFIG_XTAL_FREQ_40=y
-# CONFIG_XTAL_FREQ_AUTO is not set
-CONFIG_XTAL_FREQ=40
-# end of Main XTAL Config
-# end of Hardware Settings
-
-#
-# LCD and Touch Panel
-#
-
-#
-# LCD Touch Drivers are maintained in the IDF Component Registry
-#
-
-#
-# LCD Peripheral Configuration
-#
-CONFIG_LCD_PANEL_IO_FORMAT_BUF_SIZE=32
-# CONFIG_LCD_ENABLE_DEBUG_LOG is not set
-# end of LCD Peripheral Configuration
-# end of LCD and Touch Panel
-
-#
-# ESP NETIF Adapter
-#
-CONFIG_ESP_NETIF_IP_LOST_TIMER_INTERVAL=120
-CONFIG_ESP_NETIF_TCPIP_LWIP=y
-# CONFIG_ESP_NETIF_LOOPBACK is not set
-# CONFIG_ESP_NETIF_RECEIVE_REPORT_ERRORS is not set
-# CONFIG_ESP_NETIF_L2_TAP is not set
-# CONFIG_ESP_NETIF_BRIDGE_EN is not set
-# end of ESP NETIF Adapter
-
-#
-# PHY
-#
-CONFIG_ESP_PHY_CALIBRATION_AND_DATA_STORAGE=y
-# CONFIG_ESP_PHY_INIT_DATA_IN_PARTITION is not set
-CONFIG_ESP_PHY_MAX_WIFI_TX_POWER=20
-CONFIG_ESP_PHY_MAX_TX_POWER=20
-CONFIG_ESP_PHY_REDUCE_TX_POWER=y
-CONFIG_ESP_PHY_RF_CAL_PARTIAL=y
-# CONFIG_ESP_PHY_RF_CAL_NONE is not set
-# CONFIG_ESP_PHY_RF_CAL_FULL is not set
-CONFIG_ESP_PHY_CALIBRATION_MODE=0
-# end of PHY
-
-#
-# Power Management
-#
-# CONFIG_PM_ENABLE is not set
-# end of Power Management
-
-#
-# ESP PSRAM
-#
-# CONFIG_SPIRAM is not set
-# end of ESP PSRAM
-
-#
-# ESP Ringbuf
-#
-# CONFIG_RINGBUF_PLACE_FUNCTIONS_INTO_FLASH is not set
-# end of ESP Ringbuf
-
-#
-# ESP System Settings
-#
-# CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ_80 is not set
-CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ_160=y
-# CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ_240 is not set
-CONFIG_ESP_DEFAULT_CPU_FREQ_MHZ=160
-
-#
-# Memory
-#
-# CONFIG_ESP32_USE_FIXED_STATIC_RAM_SIZE is not set
-# end of Memory
-
-#
-# Trace memory
-#
-# CONFIG_ESP32_TRAX is not set
-CONFIG_ESP32_TRACEMEM_RESERVE_DRAM=0x0
-# end of Trace memory
-
-# CONFIG_ESP_SYSTEM_PANIC_PRINT_HALT is not set
-CONFIG_ESP_SYSTEM_PANIC_PRINT_REBOOT=y
-# CONFIG_ESP_SYSTEM_PANIC_SILENT_REBOOT is not set
-# CONFIG_ESP_SYSTEM_PANIC_GDBSTUB is not set
-# CONFIG_ESP_SYSTEM_GDBSTUB_RUNTIME is not set
-
-#
-# Memory protection
-#
-# end of Memory protection
-
-CONFIG_ESP_SYSTEM_EVENT_QUEUE_SIZE=32
-CONFIG_ESP_SYSTEM_EVENT_TASK_STACK_SIZE=2304
-CONFIG_ESP_MAIN_TASK_STACK_SIZE=3584
-CONFIG_ESP_MAIN_TASK_AFFINITY_CPU0=y
-# CONFIG_ESP_MAIN_TASK_AFFINITY_CPU1 is not set
-# CONFIG_ESP_MAIN_TASK_AFFINITY_NO_AFFINITY is not set
-CONFIG_ESP_MAIN_TASK_AFFINITY=0x0
-CONFIG_ESP_MINIMAL_SHARED_STACK_SIZE=2048
-CONFIG_ESP_CONSOLE_UART_DEFAULT=y
-# CONFIG_ESP_CONSOLE_UART_CUSTOM is not set
-# CONFIG_ESP_CONSOLE_NONE is not set
-CONFIG_ESP_CONSOLE_UART=y
-CONFIG_ESP_CONSOLE_MULTIPLE_UART=y
-CONFIG_ESP_CONSOLE_UART_NUM=0
-CONFIG_ESP_CONSOLE_UART_BAUDRATE=115200
-CONFIG_ESP_INT_WDT=y
-CONFIG_ESP_INT_WDT_TIMEOUT_MS=300
-CONFIG_ESP_INT_WDT_CHECK_CPU1=y
-CONFIG_ESP_TASK_WDT_EN=y
-CONFIG_ESP_TASK_WDT_INIT=y
-# CONFIG_ESP_TASK_WDT_PANIC is not set
-CONFIG_ESP_TASK_WDT_TIMEOUT_S=5
-CONFIG_ESP_TASK_WDT_CHECK_IDLE_TASK_CPU0=y
-CONFIG_ESP_TASK_WDT_CHECK_IDLE_TASK_CPU1=y
-# CONFIG_ESP_PANIC_HANDLER_IRAM is not set
-# CONFIG_ESP_DEBUG_STUBS_ENABLE is not set
-CONFIG_ESP_DEBUG_OCDAWARE=y
-# CONFIG_ESP_SYSTEM_CHECK_INT_LEVEL_5 is not set
-CONFIG_ESP_SYSTEM_CHECK_INT_LEVEL_4=y
-
-#
-# Brownout Detector
-#
-CONFIG_ESP_BROWNOUT_DET=y
-CONFIG_ESP_BROWNOUT_DET_LVL_SEL_0=y
-# CONFIG_ESP_BROWNOUT_DET_LVL_SEL_1 is not set
-# CONFIG_ESP_BROWNOUT_DET_LVL_SEL_2 is not set
-# CONFIG_ESP_BROWNOUT_DET_LVL_SEL_3 is not set
-# CONFIG_ESP_BROWNOUT_DET_LVL_SEL_4 is not set
-# CONFIG_ESP_BROWNOUT_DET_LVL_SEL_5 is not set
-# CONFIG_ESP_BROWNOUT_DET_LVL_SEL_6 is not set
-# CONFIG_ESP_BROWNOUT_DET_LVL_SEL_7 is not set
-CONFIG_ESP_BROWNOUT_DET_LVL=0
-# end of Brownout Detector
-
-# CONFIG_ESP32_DISABLE_BASIC_ROM_CONSOLE is not set
-CONFIG_ESP_SYSTEM_BROWNOUT_INTR=y
-# end of ESP System Settings
-
-#
-# IPC (Inter-Processor Call)
-#
-CONFIG_ESP_IPC_TASK_STACK_SIZE=1024
-CONFIG_ESP_IPC_USES_CALLERS_PRIORITY=y
-CONFIG_ESP_IPC_ISR_ENABLE=y
-# end of IPC (Inter-Processor Call)
-
-#
-# High resolution timer (esp_timer)
-#
-# CONFIG_ESP_TIMER_PROFILING is not set
-CONFIG_ESP_TIME_FUNCS_USE_RTC_TIMER=y
-CONFIG_ESP_TIME_FUNCS_USE_ESP_TIMER=y
-CONFIG_ESP_TIMER_TASK_STACK_SIZE=3584
-CONFIG_ESP_TIMER_INTERRUPT_LEVEL=1
-# CONFIG_ESP_TIMER_SUPPORTS_ISR_DISPATCH_METHOD is not set
-CONFIG_ESP_TIMER_IMPL_TG0_LAC=y
-# end of High resolution timer (esp_timer)
-
-#
-# Wi-Fi
-#
-CONFIG_ESP32_WIFI_ENABLED=y
-CONFIG_ESP32_WIFI_STATIC_RX_BUFFER_NUM=10
-CONFIG_ESP32_WIFI_DYNAMIC_RX_BUFFER_NUM=32
-# CONFIG_ESP32_WIFI_STATIC_TX_BUFFER is not set
-CONFIG_ESP32_WIFI_DYNAMIC_TX_BUFFER=y
-CONFIG_ESP32_WIFI_TX_BUFFER_TYPE=1
-CONFIG_ESP32_WIFI_DYNAMIC_TX_BUFFER_NUM=32
-CONFIG_ESP_WIFI_STATIC_RX_MGMT_BUFFER=y
-# CONFIG_ESP_WIFI_DYNAMIC_RX_MGMT_BUFFER is not set
-CONFIG_ESP_WIFI_DYNAMIC_RX_MGMT_BUF=0
-CONFIG_ESP_WIFI_RX_MGMT_BUF_NUM_DEF=5
-# CONFIG_ESP32_WIFI_CSI_ENABLED is not set
-CONFIG_ESP32_WIFI_AMPDU_TX_ENABLED=y
-CONFIG_ESP32_WIFI_TX_BA_WIN=6
-CONFIG_ESP32_WIFI_AMPDU_RX_ENABLED=y
-CONFIG_ESP32_WIFI_RX_BA_WIN=6
-CONFIG_ESP32_WIFI_NVS_ENABLED=y
-CONFIG_ESP32_WIFI_TASK_PINNED_TO_CORE_0=y
-# CONFIG_ESP32_WIFI_TASK_PINNED_TO_CORE_1 is not set
-CONFIG_ESP32_WIFI_SOFTAP_BEACON_MAX_LEN=752
-CONFIG_ESP32_WIFI_MGMT_SBUF_NUM=32
-CONFIG_ESP32_WIFI_IRAM_OPT=y
-CONFIG_ESP32_WIFI_RX_IRAM_OPT=y
-CONFIG_ESP32_WIFI_ENABLE_WPA3_SAE=y
-CONFIG_ESP32_WIFI_ENABLE_WPA3_OWE_STA=y
-# CONFIG_ESP_WIFI_SLP_IRAM_OPT is not set
-CONFIG_ESP_WIFI_STA_DISCONNECTED_PM_ENABLE=y
-# CONFIG_ESP_WIFI_GMAC_SUPPORT is not set
-CONFIG_ESP_WIFI_SOFTAP_SUPPORT=y
-# CONFIG_ESP_WIFI_SLP_BEACON_LOST_OPT is not set
-CONFIG_ESP_WIFI_ESPNOW_MAX_ENCRYPT_NUM=7
-# CONFIG_ESP_WIFI_WPS_PASSPHRASE is not set
-CONFIG_ESP_WIFI_ENTERPRISE_SUPPORT=y
-# CONFIG_ESP_WIFI_ENT_FREE_DYNAMIC_BUFFER is not set
-# end of Wi-Fi
-
-#
-# Core dump
-#
-# CONFIG_ESP_COREDUMP_ENABLE_TO_FLASH is not set
-# CONFIG_ESP_COREDUMP_ENABLE_TO_UART is not set
-CONFIG_ESP_COREDUMP_ENABLE_TO_NONE=y
-# end of Core dump
-
-#
-# FAT Filesystem support
-#
-CONFIG_FATFS_VOLUME_COUNT=2
-# CONFIG_FATFS_SECTOR_512 is not set
-# CONFIG_FATFS_SECTOR_1024 is not set
-# CONFIG_FATFS_SECTOR_2048 is not set
-CONFIG_FATFS_SECTOR_4096=y
-CONFIG_FATFS_SECTORS_PER_CLUSTER_1=y
-# CONFIG_FATFS_SECTORS_PER_CLUSTER_2 is not set
-# CONFIG_FATFS_SECTORS_PER_CLUSTER_4 is not set
-# CONFIG_FATFS_SECTORS_PER_CLUSTER_8 is not set
-# CONFIG_FATFS_SECTORS_PER_CLUSTER_16 is not set
-# CONFIG_FATFS_SECTORS_PER_CLUSTER_32 is not set
-# CONFIG_FATFS_SECTORS_PER_CLUSTER_64 is not set
-# CONFIG_FATFS_SECTORS_PER_CLUSTER_128 is not set
-# CONFIG_FATFS_CODEPAGE_DYNAMIC is not set
-CONFIG_FATFS_CODEPAGE_437=y
-# CONFIG_FATFS_CODEPAGE_720 is not set
-# CONFIG_FATFS_CODEPAGE_737 is not set
-# CONFIG_FATFS_CODEPAGE_771 is not set
-# CONFIG_FATFS_CODEPAGE_775 is not set
-# CONFIG_FATFS_CODEPAGE_850 is not set
-# CONFIG_FATFS_CODEPAGE_852 is not set
-# CONFIG_FATFS_CODEPAGE_855 is not set
-# CONFIG_FATFS_CODEPAGE_857 is not set
-# CONFIG_FATFS_CODEPAGE_860 is not set
-# CONFIG_FATFS_CODEPAGE_861 is not set
-# CONFIG_FATFS_CODEPAGE_862 is not set
-# CONFIG_FATFS_CODEPAGE_863 is not set
-# CONFIG_FATFS_CODEPAGE_864 is not set
-# CONFIG_FATFS_CODEPAGE_865 is not set
-# CONFIG_FATFS_CODEPAGE_866 is not set
-# CONFIG_FATFS_CODEPAGE_869 is not set
-# CONFIG_FATFS_CODEPAGE_932 is not set
-# CONFIG_FATFS_CODEPAGE_936 is not set
-# CONFIG_FATFS_CODEPAGE_949 is not set
-# CONFIG_FATFS_CODEPAGE_950 is not set
-CONFIG_FATFS_AUTO_TYPE=y
-# CONFIG_FATFS_FAT12 is not set
-# CONFIG_FATFS_FAT16 is not set
-CONFIG_FATFS_CODEPAGE=437
-CONFIG_FATFS_LFN_NONE=y
-# CONFIG_FATFS_LFN_HEAP is not set
-# CONFIG_FATFS_LFN_STACK is not set
-CONFIG_FATFS_FS_LOCK=0
-CONFIG_FATFS_TIMEOUT_MS=10000
-CONFIG_FATFS_PER_FILE_CACHE=y
-# CONFIG_FATFS_USE_FASTSEEK is not set
-# end of FAT Filesystem support
-
-#
-# FreeRTOS
-#
-
-#
-# Kernel
-#
-# CONFIG_FREERTOS_SMP is not set
-# CONFIG_FREERTOS_UNICORE is not set
-CONFIG_FREERTOS_HZ=100
-# CONFIG_FREERTOS_CHECK_STACKOVERFLOW_NONE is not set
-# CONFIG_FREERTOS_CHECK_STACKOVERFLOW_PTRVAL is not set
-CONFIG_FREERTOS_CHECK_STACKOVERFLOW_CANARY=y
-CONFIG_FREERTOS_THREAD_LOCAL_STORAGE_POINTERS=1
-CONFIG_FREERTOS_IDLE_TASK_STACKSIZE=1536
-# CONFIG_FREERTOS_USE_IDLE_HOOK is not set
-# CONFIG_FREERTOS_USE_TICK_HOOK is not set
-CONFIG_FREERTOS_MAX_TASK_NAME_LEN=16
-# CONFIG_FREERTOS_ENABLE_BACKWARD_COMPATIBILITY is not set
-CONFIG_FREERTOS_TIMER_TASK_PRIORITY=1
-CONFIG_FREERTOS_TIMER_TASK_STACK_DEPTH=2048
-CONFIG_FREERTOS_TIMER_QUEUE_LENGTH=10
-CONFIG_FREERTOS_QUEUE_REGISTRY_SIZE=0
-# CONFIG_FREERTOS_USE_TRACE_FACILITY is not set
-# CONFIG_FREERTOS_GENERATE_RUN_TIME_STATS is not set
-# end of Kernel
-
-#
-# Port
-#
-CONFIG_FREERTOS_TASK_FUNCTION_WRAPPER=y
-# CONFIG_FREERTOS_WATCHPOINT_END_OF_STACK is not set
-# CONFIG_FREERTOS_ENABLE_STATIC_TASK_CLEAN_UP is not set
-CONFIG_FREERTOS_CHECK_MUTEX_GIVEN_BY_OWNER=y
-CONFIG_FREERTOS_ISR_STACKSIZE=1536
-CONFIG_FREERTOS_INTERRUPT_BACKTRACE=y
-# CONFIG_FREERTOS_FPU_IN_ISR is not set
-CONFIG_FREERTOS_TICK_SUPPORT_CORETIMER=y
-CONFIG_FREERTOS_CORETIMER_0=y
-# CONFIG_FREERTOS_CORETIMER_1 is not set
-CONFIG_FREERTOS_SYSTICK_USES_CCOUNT=y
-# CONFIG_FREERTOS_PLACE_FUNCTIONS_INTO_FLASH is not set
-# CONFIG_FREERTOS_PLACE_SNAPSHOT_FUNS_INTO_FLASH is not set
-# CONFIG_FREERTOS_CHECK_PORT_CRITICAL_COMPLIANCE is not set
-CONFIG_FREERTOS_ASSERT_ON_UNTESTED_FUNCTION=y
-CONFIG_FREERTOS_ENABLE_TASK_SNAPSHOT=y
-# end of Port
-
-CONFIG_FREERTOS_NO_AFFINITY=0x7FFFFFFF
-CONFIG_FREERTOS_SUPPORT_STATIC_ALLOCATION=y
-CONFIG_FREERTOS_DEBUG_OCDAWARE=y
-# end of FreeRTOS
-
-#
-# Hardware Abstraction Layer (HAL) and Low Level (LL)
-#
-CONFIG_HAL_ASSERTION_EQUALS_SYSTEM=y
-# CONFIG_HAL_ASSERTION_DISABLE is not set
-# CONFIG_HAL_ASSERTION_SILENT is not set
-# CONFIG_HAL_ASSERTION_ENABLE is not set
-CONFIG_HAL_DEFAULT_ASSERTION_LEVEL=2
-# end of Hardware Abstraction Layer (HAL) and Low Level (LL)
-
-#
-# Heap memory debugging
-#
-CONFIG_HEAP_POISONING_DISABLED=y
-# CONFIG_HEAP_POISONING_LIGHT is not set
-# CONFIG_HEAP_POISONING_COMPREHENSIVE is not set
-CONFIG_HEAP_TRACING_OFF=y
-# CONFIG_HEAP_TRACING_STANDALONE is not set
-# CONFIG_HEAP_TRACING_TOHOST is not set
-# CONFIG_HEAP_ABORT_WHEN_ALLOCATION_FAILS is not set
-# end of Heap memory debugging
-
-#
-# SmartThings IoT Core
-#
-CONFIG_STDK_IOT_CORE=y
-CONFIG_STDK_IOT_CORE_EASYSETUP_DISCOVERY_SSID=y
-CONFIG_STDK_IOT_CORE_EASYSETUP_HTTP=y
-# CONFIG_STDK_IOT_CORE_EASYSETUP_BLE is not set
-CONFIG_STDK_IOT_CORE_EASYSETUP_HTTP_USE_SOCKET_API=y
-# CONFIG_STDK_IOT_CORE_EASYSETUP_X509 is not set
-# CONFIG_STDK_IOT_CORE_EASYSETUP_LOG_SUPPORT_NO_USE_LOGFILE is not set
-CONFIG_STDK_IOT_CORE_LOG_LEVEL_ERROR=y
-CONFIG_STDK_IOT_CORE_LOG_LEVEL_WARN=y
-CONFIG_STDK_IOT_CORE_LOG_LEVEL_INFO=y
-# CONFIG_STDK_IOT_CORE_LOG_LEVEL_DEBUG is not set
-# CONFIG_STDK_IOT_CORE_SUPPORT_STNV_PARTITION is not set
-CONFIG_STDK_IOT_CORE_LOG_FILE=y
-CONFIG_STDK_IOT_CORE_LOG_FILE_RAM_ONLY=y
-# CONFIG_STDK_IOT_CORE_LOG_FILE_FLASH_WITH_RAM is not set
-CONFIG_STDK_IOT_CORE_LOG_FILE_RAM_BUF_SIZE=8192
-# CONFIG_STDK_IOT_CORE_BSP_SUPPORT_ESP8266 is not set
-CONFIG_STDK_IOT_CORE_BSP_SUPPORT_ESP32=y
-# CONFIG_STDK_IOT_CORE_BSP_SUPPORT_ESP32S2 is not set
-# CONFIG_STDK_IOT_CORE_BSP_SUPPORT_ESP32C3 is not set
-CONFIG_STDK_IOT_CORE_OS_SUPPORT_FREERTOS=y
-# CONFIG_STDK_IOT_CORE_OS_SUPPORT_TIZENRT is not set
-# CONFIG_STDK_IOT_CORE_OS_SUPPORT_POSIX is not set
-# CONFIG_STDK_DEBUG_MEMORY_CHECK is not set
-
-#
-# Security
-#
-CONFIG_STDK_IOT_CORE_USE_MBEDTLS=y
-# CONFIG_STDK_IOT_CORE_CRYPTO_SUPPORT_RSA is not set
-# CONFIG_STDK_IOT_CORE_CRYPTO_SUPPORT_ECDSA is not set
-CONFIG_STDK_IOT_CORE_CRYPTO_SUPPORT_ED25519=y
-CONFIG_STDK_IOT_CORE_SECURITY_BACKEND_SOFTWARE=y
-# CONFIG_STDK_IOT_CORE_SECURITY_BACKEND_HARDWARE is not set
-# CONFIG_STDK_IOT_CORE_FS_SW_ENCRYPTION is not set
-CONFIG_STDK_IOT_CORE_FS_HW_ENCRYPTION=y
-# end of Security
-
-#
-# Network
-#
-CONFIG_STDK_IOT_CORE_NET_MBEDTLS=y
-# CONFIG_STDK_IOT_CORE_NET_OPENSSL is not set
-# end of Network
-# end of SmartThings IoT Core
-
-#
-# Log output
-#
-# CONFIG_LOG_DEFAULT_LEVEL_NONE is not set
-# CONFIG_LOG_DEFAULT_LEVEL_ERROR is not set
-# CONFIG_LOG_DEFAULT_LEVEL_WARN is not set
-CONFIG_LOG_DEFAULT_LEVEL_INFO=y
-# CONFIG_LOG_DEFAULT_LEVEL_DEBUG is not set
-# CONFIG_LOG_DEFAULT_LEVEL_VERBOSE is not set
-CONFIG_LOG_DEFAULT_LEVEL=3
-CONFIG_LOG_MAXIMUM_EQUALS_DEFAULT=y
-# CONFIG_LOG_MAXIMUM_LEVEL_DEBUG is not set
-# CONFIG_LOG_MAXIMUM_LEVEL_VERBOSE is not set
-CONFIG_LOG_MAXIMUM_LEVEL=3
-CONFIG_LOG_COLORS=y
-CONFIG_LOG_TIMESTAMP_SOURCE_RTOS=y
-# CONFIG_LOG_TIMESTAMP_SOURCE_SYSTEM is not set
-# end of Log output
-
-#
-# LWIP
-#
-CONFIG_LWIP_LOCAL_HOSTNAME="espressif"
-# CONFIG_LWIP_NETIF_API is not set
-CONFIG_LWIP_TCPIP_TASK_PRIO=18
-# CONFIG_LWIP_TCPIP_CORE_LOCKING is not set
-# CONFIG_LWIP_CHECK_THREAD_SAFETY is not set
-CONFIG_LWIP_DNS_SUPPORT_MDNS_QUERIES=y
-# CONFIG_LWIP_L2_TO_L3_COPY is not set
-# CONFIG_LWIP_IRAM_OPTIMIZATION is not set
-CONFIG_LWIP_TIMERS_ONDEMAND=y
-CONFIG_LWIP_MAX_SOCKETS=10
-# CONFIG_LWIP_USE_ONLY_LWIP_SELECT is not set
-# CONFIG_LWIP_SO_LINGER is not set
-CONFIG_LWIP_SO_REUSE=y
-CONFIG_LWIP_SO_REUSE_RXTOALL=y
-# CONFIG_LWIP_SO_RCVBUF is not set
-# CONFIG_LWIP_NETBUF_RECVINFO is not set
-CONFIG_LWIP_IP_DEFAULT_TTL=64
-CONFIG_LWIP_IP4_FRAG=y
-CONFIG_LWIP_IP6_FRAG=y
-# CONFIG_LWIP_IP4_REASSEMBLY is not set
-# CONFIG_LWIP_IP6_REASSEMBLY is not set
-# CONFIG_LWIP_IP_FORWARD is not set
-# CONFIG_LWIP_STATS is not set
-CONFIG_LWIP_ESP_GRATUITOUS_ARP=y
-CONFIG_LWIP_GARP_TMR_INTERVAL=60
-CONFIG_LWIP_ESP_MLDV6_REPORT=y
-CONFIG_LWIP_MLDV6_TMR_INTERVAL=40
-CONFIG_LWIP_TCPIP_RECVMBOX_SIZE=32
-CONFIG_LWIP_DHCP_DOES_ARP_CHECK=y
-# CONFIG_LWIP_DHCP_DISABLE_CLIENT_ID is not set
-CONFIG_LWIP_DHCP_DISABLE_VENDOR_CLASS_ID=y
-# CONFIG_LWIP_DHCP_RESTORE_LAST_IP is not set
-CONFIG_LWIP_DHCP_OPTIONS_LEN=68
-CONFIG_LWIP_NUM_NETIF_CLIENT_DATA=0
-CONFIG_LWIP_DHCP_COARSE_TIMER_SECS=1
-
-#
-# DHCP server
-#
-CONFIG_LWIP_DHCPS=y
-CONFIG_LWIP_DHCPS_LEASE_UNIT=60
-CONFIG_LWIP_DHCPS_MAX_STATION_NUM=8
-# end of DHCP server
-
-# CONFIG_LWIP_AUTOIP is not set
-CONFIG_LWIP_IPV6=y
-# CONFIG_LWIP_IPV6_AUTOCONFIG is not set
-CONFIG_LWIP_IPV6_NUM_ADDRESSES=3
-# CONFIG_LWIP_IPV6_FORWARD is not set
-# CONFIG_LWIP_NETIF_STATUS_CALLBACK is not set
-CONFIG_LWIP_NETIF_LOOPBACK=y
-CONFIG_LWIP_LOOPBACK_MAX_PBUFS=8
-
-#
-# TCP
-#
-CONFIG_LWIP_MAX_ACTIVE_TCP=16
-CONFIG_LWIP_MAX_LISTENING_TCP=16
-CONFIG_LWIP_TCP_HIGH_SPEED_RETRANSMISSION=y
-CONFIG_LWIP_TCP_MAXRTX=12
-CONFIG_LWIP_TCP_SYNMAXRTX=12
-CONFIG_LWIP_TCP_MSS=1440
-CONFIG_LWIP_TCP_TMR_INTERVAL=250
-CONFIG_LWIP_TCP_MSL=60000
-CONFIG_LWIP_TCP_FIN_WAIT_TIMEOUT=20000
-CONFIG_LWIP_TCP_SND_BUF_DEFAULT=5744
-CONFIG_LWIP_TCP_WND_DEFAULT=5744
-CONFIG_LWIP_TCP_RECVMBOX_SIZE=6
-CONFIG_LWIP_TCP_QUEUE_OOSEQ=y
-CONFIG_LWIP_TCP_OOSEQ_TIMEOUT=6
-CONFIG_LWIP_TCP_OOSEQ_MAX_PBUFS=4
-# CONFIG_LWIP_TCP_SACK_OUT is not set
-CONFIG_LWIP_TCP_OVERSIZE_MSS=y
-# CONFIG_LWIP_TCP_OVERSIZE_QUARTER_MSS is not set
-# CONFIG_LWIP_TCP_OVERSIZE_DISABLE is not set
-CONFIG_LWIP_TCP_RTO_TIME=1500
-# end of TCP
-
-#
-# UDP
-#
-CONFIG_LWIP_MAX_UDP_PCBS=16
-CONFIG_LWIP_UDP_RECVMBOX_SIZE=6
-# end of UDP
-
-#
-# Checksums
-#
-# CONFIG_LWIP_CHECKSUM_CHECK_IP is not set
-# CONFIG_LWIP_CHECKSUM_CHECK_UDP is not set
-CONFIG_LWIP_CHECKSUM_CHECK_ICMP=y
-# end of Checksums
-
-CONFIG_LWIP_TCPIP_TASK_STACK_SIZE=3072
-CONFIG_LWIP_TCPIP_TASK_AFFINITY_NO_AFFINITY=y
-# CONFIG_LWIP_TCPIP_TASK_AFFINITY_CPU0 is not set
-# CONFIG_LWIP_TCPIP_TASK_AFFINITY_CPU1 is not set
-CONFIG_LWIP_TCPIP_TASK_AFFINITY=0x7FFFFFFF
-# CONFIG_LWIP_PPP_SUPPORT is not set
-CONFIG_LWIP_IPV6_MEMP_NUM_ND6_QUEUE=3
-CONFIG_LWIP_IPV6_ND6_NUM_NEIGHBORS=5
-CONFIG_LWIP_ND6=y
-# CONFIG_LWIP_FORCE_ROUTER_FORWARDING is not set
-# CONFIG_LWIP_SLIP_SUPPORT is not set
-
-#
-# ICMP
-#
-CONFIG_LWIP_ICMP=y
-# CONFIG_LWIP_MULTICAST_PING is not set
-# CONFIG_LWIP_BROADCAST_PING is not set
-# end of ICMP
-
-#
-# LWIP RAW API
-#
-CONFIG_LWIP_MAX_RAW_PCBS=16
-# end of LWIP RAW API
-
-#
-# SNTP
-#
-CONFIG_LWIP_SNTP_MAX_SERVERS=1
-# CONFIG_LWIP_DHCP_GET_NTP_SRV is not set
-CONFIG_LWIP_SNTP_UPDATE_DELAY=3600000
-# end of SNTP
-
-CONFIG_LWIP_BRIDGEIF_MAX_PORTS=7
-
-#
-# DNS
-#
-CONFIG_LWIP_DNS_MAX_SERVERS=3
-# CONFIG_LWIP_FALLBACK_DNS_SERVER_SUPPORT is not set
-# end of DNS
-
-CONFIG_LWIP_ESP_LWIP_ASSERT=y
-
-#
-# Hooks
-#
-# CONFIG_LWIP_HOOK_TCP_ISN_NONE is not set
-CONFIG_LWIP_HOOK_TCP_ISN_DEFAULT=y
-# CONFIG_LWIP_HOOK_TCP_ISN_CUSTOM is not set
-CONFIG_LWIP_HOOK_IP6_ROUTE_NONE=y
-# CONFIG_LWIP_HOOK_IP6_ROUTE_DEFAULT is not set
-# CONFIG_LWIP_HOOK_IP6_ROUTE_CUSTOM is not set
-CONFIG_LWIP_HOOK_ND6_GET_GW_NONE=y
-# CONFIG_LWIP_HOOK_ND6_GET_GW_DEFAULT is not set
-# CONFIG_LWIP_HOOK_ND6_GET_GW_CUSTOM is not set
-CONFIG_LWIP_HOOK_NETCONN_EXT_RESOLVE_NONE=y
-# CONFIG_LWIP_HOOK_NETCONN_EXT_RESOLVE_DEFAULT is not set
-# CONFIG_LWIP_HOOK_NETCONN_EXT_RESOLVE_CUSTOM is not set
-CONFIG_LWIP_HOOK_IP6_INPUT_NONE=y
-# CONFIG_LWIP_HOOK_IP6_INPUT_DEFAULT is not set
-# CONFIG_LWIP_HOOK_IP6_INPUT_CUSTOM is not set
-# end of Hooks
-
-# CONFIG_LWIP_DEBUG is not set
-# end of LWIP
-
-#
-# mbedTLS
-#
-CONFIG_MBEDTLS_INTERNAL_MEM_ALLOC=y
-# CONFIG_MBEDTLS_DEFAULT_MEM_ALLOC is not set
-# CONFIG_MBEDTLS_CUSTOM_MEM_ALLOC is not set
-CONFIG_MBEDTLS_ASYMMETRIC_CONTENT_LEN=y
-CONFIG_MBEDTLS_SSL_IN_CONTENT_LEN=16384
-CONFIG_MBEDTLS_SSL_OUT_CONTENT_LEN=4096
-# CONFIG_MBEDTLS_DYNAMIC_BUFFER is not set
-# CONFIG_MBEDTLS_DEBUG is not set
-
-#
-# mbedTLS v3.x related
-#
-# CONFIG_MBEDTLS_SSL_PROTO_TLS1_3 is not set
-# CONFIG_MBEDTLS_SSL_VARIABLE_BUFFER_LENGTH is not set
-CONFIG_MBEDTLS_ECDH_LEGACY_CONTEXT=y
-# CONFIG_MBEDTLS_X509_TRUSTED_CERT_CALLBACK is not set
-# CONFIG_MBEDTLS_SSL_CONTEXT_SERIALIZATION is not set
-CONFIG_MBEDTLS_SSL_KEEP_PEER_CERTIFICATE=y
-CONFIG_MBEDTLS_PKCS7_C=y
-# end of mbedTLS v3.x related
-
-#
-# Certificate Bundle
-#
-CONFIG_MBEDTLS_CERTIFICATE_BUNDLE=y
-CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_FULL=y
-# CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_CMN is not set
-# CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_DEFAULT_NONE is not set
-# CONFIG_MBEDTLS_CUSTOM_CERTIFICATE_BUNDLE is not set
-CONFIG_MBEDTLS_CERTIFICATE_BUNDLE_MAX_CERTS=200
-# end of Certificate Bundle
-
-CONFIG_MBEDTLS_ECP_RESTARTABLE=y
-CONFIG_MBEDTLS_CMAC_C=y
-CONFIG_MBEDTLS_HARDWARE_AES=y
-# CONFIG_MBEDTLS_GCM_SUPPORT_NON_AES_CIPHER is not set
-CONFIG_MBEDTLS_HARDWARE_MPI=y
-CONFIG_MBEDTLS_HARDWARE_SHA=y
-CONFIG_MBEDTLS_ROM_MD5=y
-# CONFIG_MBEDTLS_ATCA_HW_ECDSA_SIGN is not set
-# CONFIG_MBEDTLS_ATCA_HW_ECDSA_VERIFY is not set
-CONFIG_MBEDTLS_HAVE_TIME=y
-# CONFIG_MBEDTLS_PLATFORM_TIME_ALT is not set
-# CONFIG_MBEDTLS_HAVE_TIME_DATE is not set
-CONFIG_MBEDTLS_ECDSA_DETERMINISTIC=y
-CONFIG_MBEDTLS_SHA512_C=y
-CONFIG_MBEDTLS_TLS_SERVER_AND_CLIENT=y
-# CONFIG_MBEDTLS_TLS_SERVER_ONLY is not set
-# CONFIG_MBEDTLS_TLS_CLIENT_ONLY is not set
-# CONFIG_MBEDTLS_TLS_DISABLED is not set
-CONFIG_MBEDTLS_TLS_SERVER=y
-CONFIG_MBEDTLS_TLS_CLIENT=y
-CONFIG_MBEDTLS_TLS_ENABLED=y
-
-#
-# TLS Key Exchange Methods
-#
-# CONFIG_MBEDTLS_PSK_MODES is not set
-CONFIG_MBEDTLS_KEY_EXCHANGE_RSA=y
-CONFIG_MBEDTLS_KEY_EXCHANGE_ELLIPTIC_CURVE=y
-CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_RSA=y
-CONFIG_MBEDTLS_KEY_EXCHANGE_ECDHE_ECDSA=y
-CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_ECDSA=y
-CONFIG_MBEDTLS_KEY_EXCHANGE_ECDH_RSA=y
-# end of TLS Key Exchange Methods
-
-CONFIG_MBEDTLS_SSL_RENEGOTIATION=y
-CONFIG_MBEDTLS_SSL_PROTO_TLS1_2=y
-# CONFIG_MBEDTLS_SSL_PROTO_GMTSSL1_1 is not set
-# CONFIG_MBEDTLS_SSL_PROTO_DTLS is not set
-CONFIG_MBEDTLS_SSL_ALPN=y
-CONFIG_MBEDTLS_CLIENT_SSL_SESSION_TICKETS=y
-CONFIG_MBEDTLS_SERVER_SSL_SESSION_TICKETS=y
-
-#
-# Symmetric Ciphers
-#
-CONFIG_MBEDTLS_AES_C=y
-# CONFIG_MBEDTLS_CAMELLIA_C is not set
-# CONFIG_MBEDTLS_DES_C is not set
-# CONFIG_MBEDTLS_BLOWFISH_C is not set
-# CONFIG_MBEDTLS_XTEA_C is not set
-CONFIG_MBEDTLS_CCM_C=y
-CONFIG_MBEDTLS_GCM_C=y
-# CONFIG_MBEDTLS_NIST_KW_C is not set
-# end of Symmetric Ciphers
-
-# CONFIG_MBEDTLS_RIPEMD160_C is not set
-
-#
-# Certificates
-#
-CONFIG_MBEDTLS_PEM_PARSE_C=y
-CONFIG_MBEDTLS_PEM_WRITE_C=y
-CONFIG_MBEDTLS_X509_CRL_PARSE_C=y
-CONFIG_MBEDTLS_X509_CSR_PARSE_C=y
-# end of Certificates
-
-CONFIG_MBEDTLS_ECP_C=y
-# CONFIG_MBEDTLS_DHM_C is not set
-CONFIG_MBEDTLS_ECDH_C=y
-CONFIG_MBEDTLS_ECDSA_C=y
-# CONFIG_MBEDTLS_ECJPAKE_C is not set
-CONFIG_MBEDTLS_ECP_DP_SECP192R1_ENABLED=y
-CONFIG_MBEDTLS_ECP_DP_SECP224R1_ENABLED=y
-CONFIG_MBEDTLS_ECP_DP_SECP256R1_ENABLED=y
-CONFIG_MBEDTLS_ECP_DP_SECP384R1_ENABLED=y
-CONFIG_MBEDTLS_ECP_DP_SECP521R1_ENABLED=y
-CONFIG_MBEDTLS_ECP_DP_SECP192K1_ENABLED=y
-CONFIG_MBEDTLS_ECP_DP_SECP224K1_ENABLED=y
-CONFIG_MBEDTLS_ECP_DP_SECP256K1_ENABLED=y
-CONFIG_MBEDTLS_ECP_DP_BP256R1_ENABLED=y
-CONFIG_MBEDTLS_ECP_DP_BP384R1_ENABLED=y
-CONFIG_MBEDTLS_ECP_DP_BP512R1_ENABLED=y
-CONFIG_MBEDTLS_ECP_DP_CURVE25519_ENABLED=y
-CONFIG_MBEDTLS_ECP_NIST_OPTIM=y
-CONFIG_MBEDTLS_ECP_FIXED_POINT_OPTIM=y
-# CONFIG_MBEDTLS_POLY1305_C is not set
-# CONFIG_MBEDTLS_CHACHA20_C is not set
-# CONFIG_MBEDTLS_HKDF_C is not set
-# CONFIG_MBEDTLS_THREADING_C is not set
-# CONFIG_MBEDTLS_LARGE_KEY_SOFTWARE_MPI is not set
-# end of mbedTLS
-
-#
-# ESP-MQTT Configurations
-#
-CONFIG_MQTT_PROTOCOL_311=y
-# CONFIG_MQTT_PROTOCOL_5 is not set
-CONFIG_MQTT_TRANSPORT_SSL=y
-CONFIG_MQTT_TRANSPORT_WEBSOCKET=y
-CONFIG_MQTT_TRANSPORT_WEBSOCKET_SECURE=y
-# CONFIG_MQTT_MSG_ID_INCREMENTAL is not set
-# CONFIG_MQTT_SKIP_PUBLISH_IF_DISCONNECTED is not set
-# CONFIG_MQTT_REPORT_DELETED_MESSAGES is not set
-# CONFIG_MQTT_USE_CUSTOM_CONFIG is not set
-# CONFIG_MQTT_TASK_CORE_SELECTION_ENABLED is not set
-# CONFIG_MQTT_CUSTOM_OUTBOX is not set
-# end of ESP-MQTT Configurations
-
-#
-# Newlib
-#
-CONFIG_NEWLIB_STDOUT_LINE_ENDING_CRLF=y
-# CONFIG_NEWLIB_STDOUT_LINE_ENDING_LF is not set
-# CONFIG_NEWLIB_STDOUT_LINE_ENDING_CR is not set
-# CONFIG_NEWLIB_STDIN_LINE_ENDING_CRLF is not set
-# CONFIG_NEWLIB_STDIN_LINE_ENDING_LF is not set
-CONFIG_NEWLIB_STDIN_LINE_ENDING_CR=y
-# CONFIG_NEWLIB_NANO_FORMAT is not set
-CONFIG_NEWLIB_TIME_SYSCALL_USE_RTC_HRT=y
-# CONFIG_NEWLIB_TIME_SYSCALL_USE_RTC is not set
-# CONFIG_NEWLIB_TIME_SYSCALL_USE_HRT is not set
-# CONFIG_NEWLIB_TIME_SYSCALL_USE_NONE is not set
-# end of Newlib
-
-#
-# NVS
-#
-# CONFIG_NVS_ASSERT_ERROR_CHECK is not set
-# end of NVS
-
-#
-# OpenThread
-#
-# CONFIG_OPENTHREAD_ENABLED is not set
-# end of OpenThread
-
-#
-# Protocomm
-#
-CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_0=y
-CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_1=y
-CONFIG_ESP_PROTOCOMM_SUPPORT_SECURITY_VERSION_2=y
-# end of Protocomm
-
-#
-# PThreads
-#
-CONFIG_PTHREAD_TASK_PRIO_DEFAULT=5
-CONFIG_PTHREAD_TASK_STACK_SIZE_DEFAULT=3072
-CONFIG_PTHREAD_STACK_MIN=768
-CONFIG_PTHREAD_DEFAULT_CORE_NO_AFFINITY=y
-# CONFIG_PTHREAD_DEFAULT_CORE_0 is not set
-# CONFIG_PTHREAD_DEFAULT_CORE_1 is not set
-CONFIG_PTHREAD_TASK_CORE_DEFAULT=-1
-CONFIG_PTHREAD_TASK_NAME_DEFAULT="pthread"
-# end of PThreads
-
-#
-# MMU Config
-#
-CONFIG_MMU_PAGE_SIZE_64KB=y
-CONFIG_MMU_PAGE_MODE="64KB"
-CONFIG_MMU_PAGE_SIZE=0x10000
-# end of MMU Config
-
-#
-# Main Flash configuration
-#
-
-#
-# SPI Flash behavior when brownout
-#
-CONFIG_SPI_FLASH_BROWNOUT_RESET_XMC=y
-CONFIG_SPI_FLASH_BROWNOUT_RESET=y
-# end of SPI Flash behavior when brownout
-
-#
-# Optional and Experimental Features (READ DOCS FIRST)
-#
-
-#
-# Features here require specific hardware (READ DOCS FIRST!)
-#
-# end of Optional and Experimental Features (READ DOCS FIRST)
-# end of Main Flash configuration
-
-#
-# SPI Flash driver
-#
-# CONFIG_SPI_FLASH_VERIFY_WRITE is not set
-# CONFIG_SPI_FLASH_ENABLE_COUNTERS is not set
-CONFIG_SPI_FLASH_ROM_DRIVER_PATCH=y
-CONFIG_SPI_FLASH_DANGEROUS_WRITE_ABORTS=y
-# CONFIG_SPI_FLASH_DANGEROUS_WRITE_FAILS is not set
-# CONFIG_SPI_FLASH_DANGEROUS_WRITE_ALLOWED is not set
-# CONFIG_SPI_FLASH_SHARE_SPI1_BUS is not set
-# CONFIG_SPI_FLASH_BYPASS_BLOCK_ERASE is not set
-CONFIG_SPI_FLASH_YIELD_DURING_ERASE=y
-CONFIG_SPI_FLASH_ERASE_YIELD_DURATION_MS=20
-CONFIG_SPI_FLASH_ERASE_YIELD_TICKS=1
-CONFIG_SPI_FLASH_WRITE_CHUNK_SIZE=8192
-# CONFIG_SPI_FLASH_SIZE_OVERRIDE is not set
-# CONFIG_SPI_FLASH_CHECK_ERASE_TIMEOUT_DISABLED is not set
-# CONFIG_SPI_FLASH_OVERRIDE_CHIP_DRIVER_LIST is not set
-
-#
-# Auto-detect flash chips
-#
-CONFIG_SPI_FLASH_SUPPORT_ISSI_CHIP=y
-CONFIG_SPI_FLASH_SUPPORT_MXIC_CHIP=y
-CONFIG_SPI_FLASH_SUPPORT_GD_CHIP=y
-CONFIG_SPI_FLASH_SUPPORT_WINBOND_CHIP=y
-# CONFIG_SPI_FLASH_SUPPORT_BOYA_CHIP is not set
-# CONFIG_SPI_FLASH_SUPPORT_TH_CHIP is not set
-# end of Auto-detect flash chips
-
-CONFIG_SPI_FLASH_ENABLE_ENCRYPTED_READ_WRITE=y
-# end of SPI Flash driver
-
-#
-# SPIFFS Configuration
-#
-CONFIG_SPIFFS_MAX_PARTITIONS=3
-
-#
-# SPIFFS Cache Configuration
-#
-CONFIG_SPIFFS_CACHE=y
-CONFIG_SPIFFS_CACHE_WR=y
-# CONFIG_SPIFFS_CACHE_STATS is not set
-# end of SPIFFS Cache Configuration
-
-CONFIG_SPIFFS_PAGE_CHECK=y
-CONFIG_SPIFFS_GC_MAX_RUNS=10
-# CONFIG_SPIFFS_GC_STATS is not set
-CONFIG_SPIFFS_PAGE_SIZE=256
-CONFIG_SPIFFS_OBJ_NAME_LEN=32
-# CONFIG_SPIFFS_FOLLOW_SYMLINKS is not set
-CONFIG_SPIFFS_USE_MAGIC=y
-CONFIG_SPIFFS_USE_MAGIC_LENGTH=y
-CONFIG_SPIFFS_META_LENGTH=4
-CONFIG_SPIFFS_USE_MTIME=y
-
-#
-# Debug Configuration
-#
-# CONFIG_SPIFFS_DBG is not set
-# CONFIG_SPIFFS_API_DBG is not set
-# CONFIG_SPIFFS_GC_DBG is not set
-# CONFIG_SPIFFS_CACHE_DBG is not set
-# CONFIG_SPIFFS_CHECK_DBG is not set
-# CONFIG_SPIFFS_TEST_VISUALISATION is not set
-# end of Debug Configuration
-# end of SPIFFS Configuration
-
-#
-# TCP Transport
-#
-
-#
-# Websocket
-#
-CONFIG_WS_TRANSPORT=y
-CONFIG_WS_BUFFER_SIZE=1024
-# CONFIG_WS_DYNAMIC_BUFFER is not set
-# end of Websocket
-# end of TCP Transport
-
-#
-# Ultra Low Power (ULP) Co-processor
-#
-# CONFIG_ULP_COPROC_ENABLED is not set
-# end of Ultra Low Power (ULP) Co-processor
-
-#
-# Unity unit testing library
-#
-CONFIG_UNITY_ENABLE_FLOAT=y
-CONFIG_UNITY_ENABLE_DOUBLE=y
-# CONFIG_UNITY_ENABLE_64BIT is not set
-# CONFIG_UNITY_ENABLE_COLOR is not set
-CONFIG_UNITY_ENABLE_IDF_TEST_RUNNER=y
-# CONFIG_UNITY_ENABLE_FIXTURE is not set
-# CONFIG_UNITY_ENABLE_BACKTRACE_ON_FAIL is not set
-# end of Unity unit testing library
-
-#
-# Root Hub configuration
-#
-# end of Root Hub configuration
-
-#
-# Virtual file system
-#
-CONFIG_VFS_SUPPORT_IO=y
-CONFIG_VFS_SUPPORT_DIR=y
-CONFIG_VFS_SUPPORT_SELECT=y
-CONFIG_VFS_SUPPRESS_SELECT_DEBUG_OUTPUT=y
-CONFIG_VFS_SUPPORT_TERMIOS=y
-
-#
-# Host File System I/O (Semihosting)
-#
-CONFIG_VFS_SEMIHOSTFS_MAX_MOUNT_POINTS=1
-# end of Host File System I/O (Semihosting)
-# end of Virtual file system
-
-#
-# Wear Levelling
-#
-# CONFIG_WL_SECTOR_SIZE_512 is not set
-CONFIG_WL_SECTOR_SIZE_4096=y
-CONFIG_WL_SECTOR_SIZE=4096
-# end of Wear Levelling
-
-#
-# Wi-Fi Provisioning Manager
-#
-CONFIG_WIFI_PROV_SCAN_MAX_ENTRIES=16
-CONFIG_WIFI_PROV_AUTOSTOP_TIMEOUT=30
-# CONFIG_WIFI_PROV_BLE_FORCE_ENCRYPTION is not set
-CONFIG_WIFI_PROV_STA_ALL_CHANNEL_SCAN=y
-# CONFIG_WIFI_PROV_STA_FAST_SCAN is not set
-# end of Wi-Fi Provisioning Manager
-
-#
-# Supplicant
-#
-CONFIG_WPA_MBEDTLS_CRYPTO=y
-CONFIG_WPA_MBEDTLS_TLS_CLIENT=y
-# CONFIG_WPA_WAPI_PSK is not set
-# CONFIG_WPA_DEBUG_PRINT is not set
-# CONFIG_WPA_TESTING_OPTIONS is not set
-# CONFIG_WPA_WPS_STRICT is not set
-# CONFIG_WPA_11KV_SUPPORT is not set
-# CONFIG_WPA_MBO_SUPPORT is not set
-# CONFIG_WPA_DPP_SUPPORT is not set
-# CONFIG_WPA_11R_SUPPORT is not set
-# CONFIG_WPA_WPS_SOFTAP_REGISTRAR is not set
-# end of Supplicant
-
-#
-# libsodium
-#
-# end of libsodium
-# end of Component config
-
-# Deprecated options for backward compatibility
-# CONFIG_NO_BLOBS is not set
-# CONFIG_ESP32_NO_BLOBS is not set
-# CONFIG_ESP32_COMPATIBLE_PRE_V2_1_BOOTLOADERS is not set
-# CONFIG_ESP32_COMPATIBLE_PRE_V3_1_BOOTLOADERS is not set
-# CONFIG_LOG_BOOTLOADER_LEVEL_NONE is not set
-# CONFIG_LOG_BOOTLOADER_LEVEL_ERROR is not set
-# CONFIG_LOG_BOOTLOADER_LEVEL_WARN is not set
-CONFIG_LOG_BOOTLOADER_LEVEL_INFO=y
-# CONFIG_LOG_BOOTLOADER_LEVEL_DEBUG is not set
-# CONFIG_LOG_BOOTLOADER_LEVEL_VERBOSE is not set
-CONFIG_LOG_BOOTLOADER_LEVEL=3
-# CONFIG_APP_ROLLBACK_ENABLE is not set
-# CONFIG_FLASH_ENCRYPTION_ENABLED is not set
-# CONFIG_FLASHMODE_QIO is not set
-# CONFIG_FLASHMODE_QOUT is not set
-CONFIG_FLASHMODE_DIO=y
-# CONFIG_FLASHMODE_DOUT is not set
-CONFIG_MONITOR_BAUD=115200
-CONFIG_OPTIMIZATION_LEVEL_DEBUG=y
-CONFIG_COMPILER_OPTIMIZATION_LEVEL_DEBUG=y
-# CONFIG_OPTIMIZATION_LEVEL_RELEASE is not set
-# CONFIG_COMPILER_OPTIMIZATION_LEVEL_RELEASE is not set
-CONFIG_OPTIMIZATION_ASSERTIONS_ENABLED=y
-# CONFIG_OPTIMIZATION_ASSERTIONS_SILENT is not set
-# CONFIG_OPTIMIZATION_ASSERTIONS_DISABLED is not set
-CONFIG_OPTIMIZATION_ASSERTION_LEVEL=2
-# CONFIG_CXX_EXCEPTIONS is not set
-CONFIG_STACK_CHECK_NONE=y
-# CONFIG_STACK_CHECK_NORM is not set
-# CONFIG_STACK_CHECK_STRONG is not set
-# CONFIG_STACK_CHECK_ALL is not set
-# CONFIG_WARN_WRITE_STRINGS is not set
-# CONFIG_ESP32_APPTRACE_DEST_TRAX is not set
-CONFIG_ESP32_APPTRACE_DEST_NONE=y
-CONFIG_ESP32_APPTRACE_LOCK_ENABLE=y
-CONFIG_ADC2_DISABLE_DAC=y
-# CONFIG_MCPWM_ISR_IN_IRAM is not set
-# CONFIG_EVENT_LOOP_PROFILING is not set
-CONFIG_POST_EVENTS_FROM_ISR=y
-CONFIG_POST_EVENTS_FROM_IRAM_ISR=y
-# CONFIG_OTA_ALLOW_HTTP is not set
-# CONFIG_TWO_UNIVERSAL_MAC_ADDRESS is not set
-CONFIG_FOUR_UNIVERSAL_MAC_ADDRESS=y
-CONFIG_NUMBER_OF_UNIVERSAL_MAC_ADDRESS=4
-# CONFIG_ESP_SYSTEM_PD_FLASH is not set
-CONFIG_ESP32_DEEP_SLEEP_WAKEUP_DELAY=2000
-CONFIG_ESP32_RTC_CLK_SRC_INT_RC=y
-CONFIG_ESP32_RTC_CLOCK_SOURCE_INTERNAL_RC=y
-# CONFIG_ESP32_RTC_CLK_SRC_EXT_CRYS is not set
-# CONFIG_ESP32_RTC_CLOCK_SOURCE_EXTERNAL_CRYSTAL is not set
-# CONFIG_ESP32_RTC_CLK_SRC_EXT_OSC is not set
-# CONFIG_ESP32_RTC_CLOCK_SOURCE_EXTERNAL_OSC is not set
-# CONFIG_ESP32_RTC_CLK_SRC_INT_8MD256 is not set
-# CONFIG_ESP32_RTC_CLOCK_SOURCE_INTERNAL_8MD256 is not set
-CONFIG_ESP32_RTC_CLK_CAL_CYCLES=1024
-# CONFIG_ESP32_XTAL_FREQ_26 is not set
-CONFIG_ESP32_XTAL_FREQ_40=y
-# CONFIG_ESP32_XTAL_FREQ_AUTO is not set
-CONFIG_ESP32_XTAL_FREQ=40
-CONFIG_ESP32_PHY_CALIBRATION_AND_DATA_STORAGE=y
-# CONFIG_ESP32_PHY_INIT_DATA_IN_PARTITION is not set
-CONFIG_ESP32_PHY_MAX_WIFI_TX_POWER=20
-CONFIG_ESP32_PHY_MAX_TX_POWER=20
-CONFIG_REDUCE_PHY_TX_POWER=y
-CONFIG_ESP32_REDUCE_PHY_TX_POWER=y
-# CONFIG_SPIRAM_SUPPORT is not set
-# CONFIG_ESP32_SPIRAM_SUPPORT is not set
-# CONFIG_ESP32_DEFAULT_CPU_FREQ_80 is not set
-CONFIG_ESP32_DEFAULT_CPU_FREQ_160=y
-# CONFIG_ESP32_DEFAULT_CPU_FREQ_240 is not set
-CONFIG_ESP32_DEFAULT_CPU_FREQ_MHZ=160
-CONFIG_TRACEMEM_RESERVE_DRAM=0x0
-# CONFIG_ESP32_PANIC_PRINT_HALT is not set
-CONFIG_ESP32_PANIC_PRINT_REBOOT=y
-# CONFIG_ESP32_PANIC_SILENT_REBOOT is not set
-# CONFIG_ESP32_PANIC_GDBSTUB is not set
-CONFIG_SYSTEM_EVENT_QUEUE_SIZE=32
-CONFIG_SYSTEM_EVENT_TASK_STACK_SIZE=2304
-CONFIG_MAIN_TASK_STACK_SIZE=3584
-CONFIG_CONSOLE_UART_DEFAULT=y
-# CONFIG_CONSOLE_UART_CUSTOM is not set
-# CONFIG_CONSOLE_UART_NONE is not set
-# CONFIG_ESP_CONSOLE_UART_NONE is not set
-CONFIG_CONSOLE_UART=y
-CONFIG_CONSOLE_UART_NUM=0
-CONFIG_CONSOLE_UART_BAUDRATE=115200
-CONFIG_INT_WDT=y
-CONFIG_INT_WDT_TIMEOUT_MS=300
-CONFIG_INT_WDT_CHECK_CPU1=y
-CONFIG_TASK_WDT=y
-CONFIG_ESP_TASK_WDT=y
-# CONFIG_TASK_WDT_PANIC is not set
-CONFIG_TASK_WDT_TIMEOUT_S=5
-CONFIG_TASK_WDT_CHECK_IDLE_TASK_CPU0=y
-CONFIG_TASK_WDT_CHECK_IDLE_TASK_CPU1=y
-# CONFIG_ESP32_DEBUG_STUBS_ENABLE is not set
-CONFIG_ESP32_DEBUG_OCDAWARE=y
-CONFIG_BROWNOUT_DET=y
-CONFIG_ESP32_BROWNOUT_DET=y
-CONFIG_BROWNOUT_DET_LVL_SEL_0=y
-CONFIG_ESP32_BROWNOUT_DET_LVL_SEL_0=y
-# CONFIG_BROWNOUT_DET_LVL_SEL_1 is not set
-# CONFIG_ESP32_BROWNOUT_DET_LVL_SEL_1 is not set
-# CONFIG_BROWNOUT_DET_LVL_SEL_2 is not set
-# CONFIG_ESP32_BROWNOUT_DET_LVL_SEL_2 is not set
-# CONFIG_BROWNOUT_DET_LVL_SEL_3 is not set
-# CONFIG_ESP32_BROWNOUT_DET_LVL_SEL_3 is not set
-# CONFIG_BROWNOUT_DET_LVL_SEL_4 is not set
-# CONFIG_ESP32_BROWNOUT_DET_LVL_SEL_4 is not set
-# CONFIG_BROWNOUT_DET_LVL_SEL_5 is not set
-# CONFIG_ESP32_BROWNOUT_DET_LVL_SEL_5 is not set
-# CONFIG_BROWNOUT_DET_LVL_SEL_6 is not set
-# CONFIG_ESP32_BROWNOUT_DET_LVL_SEL_6 is not set
-# CONFIG_BROWNOUT_DET_LVL_SEL_7 is not set
-# CONFIG_ESP32_BROWNOUT_DET_LVL_SEL_7 is not set
-CONFIG_BROWNOUT_DET_LVL=0
-CONFIG_ESP32_BROWNOUT_DET_LVL=0
-# CONFIG_DISABLE_BASIC_ROM_CONSOLE is not set
-CONFIG_IPC_TASK_STACK_SIZE=1024
-CONFIG_TIMER_TASK_STACK_SIZE=3584
-# CONFIG_ESP32_ENABLE_COREDUMP_TO_FLASH is not set
-# CONFIG_ESP32_ENABLE_COREDUMP_TO_UART is not set
-CONFIG_ESP32_ENABLE_COREDUMP_TO_NONE=y
-CONFIG_TIMER_TASK_PRIORITY=1
-CONFIG_TIMER_TASK_STACK_DEPTH=2048
-CONFIG_TIMER_QUEUE_LENGTH=10
-# CONFIG_ENABLE_STATIC_TASK_CLEAN_UP_HOOK is not set
-# CONFIG_HAL_ASSERTION_SILIENT is not set
-# CONFIG_L2_TO_L3_COPY is not set
-CONFIG_ESP_GRATUITOUS_ARP=y
-CONFIG_GARP_TMR_INTERVAL=60
-CONFIG_TCPIP_RECVMBOX_SIZE=32
-CONFIG_TCP_MAXRTX=12
-CONFIG_TCP_SYNMAXRTX=12
-CONFIG_TCP_MSS=1440
-CONFIG_TCP_MSL=60000
-CONFIG_TCP_SND_BUF_DEFAULT=5744
-CONFIG_TCP_WND_DEFAULT=5744
-CONFIG_TCP_RECVMBOX_SIZE=6
-CONFIG_TCP_QUEUE_OOSEQ=y
-CONFIG_TCP_OVERSIZE_MSS=y
-# CONFIG_TCP_OVERSIZE_QUARTER_MSS is not set
-# CONFIG_TCP_OVERSIZE_DISABLE is not set
-CONFIG_UDP_RECVMBOX_SIZE=6
-CONFIG_TCPIP_TASK_STACK_SIZE=3072
-CONFIG_TCPIP_TASK_AFFINITY_NO_AFFINITY=y
-# CONFIG_TCPIP_TASK_AFFINITY_CPU0 is not set
-# CONFIG_TCPIP_TASK_AFFINITY_CPU1 is not set
-CONFIG_TCPIP_TASK_AFFINITY=0x7FFFFFFF
-# CONFIG_PPP_SUPPORT is not set
-CONFIG_ESP32_TIME_SYSCALL_USE_RTC_HRT=y
-CONFIG_ESP32_TIME_SYSCALL_USE_RTC_FRC1=y
-# CONFIG_ESP32_TIME_SYSCALL_USE_RTC is not set
-# CONFIG_ESP32_TIME_SYSCALL_USE_HRT is not set
-# CONFIG_ESP32_TIME_SYSCALL_USE_FRC1 is not set
-# CONFIG_ESP32_TIME_SYSCALL_USE_NONE is not set
-CONFIG_ESP32_PTHREAD_TASK_PRIO_DEFAULT=5
-CONFIG_ESP32_PTHREAD_TASK_STACK_SIZE_DEFAULT=3072
-CONFIG_ESP32_PTHREAD_STACK_MIN=768
-CONFIG_ESP32_DEFAULT_PTHREAD_CORE_NO_AFFINITY=y
-# CONFIG_ESP32_DEFAULT_PTHREAD_CORE_0 is not set
-# CONFIG_ESP32_DEFAULT_PTHREAD_CORE_1 is not set
-CONFIG_ESP32_PTHREAD_TASK_CORE_DEFAULT=-1
-CONFIG_ESP32_PTHREAD_TASK_NAME_DEFAULT="pthread"
-CONFIG_SPI_FLASH_WRITING_DANGEROUS_REGIONS_ABORTS=y
-# CONFIG_SPI_FLASH_WRITING_DANGEROUS_REGIONS_FAILS is not set
-# CONFIG_SPI_FLASH_WRITING_DANGEROUS_REGIONS_ALLOWED is not set
-# CONFIG_ESP32_ULP_COPROC_ENABLED is not set
-CONFIG_SUPPRESS_SELECT_DEBUG_OUTPUT=y
-CONFIG_SUPPORT_TERMIOS=y
-CONFIG_SEMIHOSTFS_MAX_MOUNT_POINTS=1
-# End of deprecated options
-- 
2.25.1

